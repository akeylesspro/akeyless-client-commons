{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\hooks\\index.js"],"names":["__defProp","Object","defineProperty","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__getOwnPropDesc","__toESM","mod","isNodeMode","__create","__esModule","value","__toCommonJS","hooks_exports","useDocumentTitle","useSafeEffect","useSetUserCountry","useSnapshotBulk","module","exports","import_akeyless_types_commons2","require","import_react","import_moment","import_app"],"mappings":"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/hooks/index.ts\nvar hooks_exports = {};\n__export(hooks_exports, {\n  useDocumentTitle: () => useDocumentTitle,\n  useSafeEffect: () => useSafeEffect,\n  useSetUserCountry: () => useSetUserCountry,\n  useSnapshotBulk: () => useSnapshotBulk\n});\nmodule.exports = __toCommonJS(hooks_exports);\n\n// src/hooks/global.ts\nvar import_akeyless_types_commons2 = require(\"akeyless-types-commons\");\nvar import_react = require(\"react\");\n\n// src/helpers/firebase.ts\nvar import_moment = __toESM(require(\"moment\"));\nvar import_app = require(\"firebase/app\");\nvar import_storage = require(\"firebase/storage\");\nvar import_auth = require(\"firebase/auth\");\nvar import_firestore = require(\"firebase/firestore\");\nvar import_meta = {};\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import_meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import_meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import_meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import_meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import_meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import_meta.env.VITE_APP_ID\n  };\n  try {\n    const app = (0, import_app.initializeApp)(firebaseConfig);\n    const auth2 = (0, import_auth.getAuth)(app);\n    const db2 = (0, import_firestore.getFirestore)(app);\n    const storage2 = (0, import_storage.getStorage)(app);\n    return { db: db2, auth: auth2, storage: storage2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth, storage } = initApp();\nvar collections = {\n  clients: (0, import_firestore.collection)(db, \"nx-clients\"),\n  sites: (0, import_firestore.collection)(db, \"nx-sites\"),\n  cars: (0, import_firestore.collection)(db, \"units\"),\n  users: (0, import_firestore.collection)(db, \"nx-users\"),\n  lastLocations: (0, import_firestore.collection)(db, \"last_locations\"),\n  ermEvents: (0, import_firestore.collection)(db, \"erm_events_general\"),\n  erm2Events: (0, import_firestore.collection)(db, \"erm2_events_general\"),\n  ruptelaEvents: (0, import_firestore.collection)(db, \"ruptela_events_general\"),\n  polygons: (0, import_firestore.collection)(db, \"nx-polygons\"),\n  polygonEvents: (0, import_firestore.collection)(db, \"polygon_events\"),\n  polygonCars: (0, import_firestore.collection)(db, \"polygon_cars\"),\n  canbus: (0, import_firestore.collection)(db, \"erm_canbus_parameters\"),\n  states: (0, import_firestore.collection)(db, \"erm_states\"),\n  app_pro_commands_queue: (0, import_firestore.collection)(db, \"app_pro_commands_queue\"),\n  trips: (0, import_firestore.collection)(db, \"erm2_trip\"),\n  tripsDetails: (0, import_firestore.collection)(db, \"erm2_trip_details\"),\n  audit: (0, import_firestore.collection)(db, \"nx-audit\"),\n  nx_settings: (0, import_firestore.collection)(db, \"nx-settings\"),\n  settings: (0, import_firestore.collection)(db, \"settings\"),\n  translations: (0, import_firestore.collection)(db, \"nx-translations\"),\n  nx_cars: (0, import_firestore.collection)(db, \"nx-cars\"),\n  boards: (0, import_firestore.collection)(db, \"boards\"),\n  protection_types: (0, import_firestore.collection)(db, \"protectionTypes\"),\n  board_types: (0, import_firestore.collection)(db, \"boardTypes\"),\n  charge_capacities: (0, import_firestore.collection)(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = import_firestore.Timestamp.now;\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar snapshot = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  let isResolved = false;\n  const promise = new Promise((resolve) => {\n    console.log(`==> ${config.collectionName} subscribed.`);\n    resolvePromise = () => {\n      if (!isResolved) {\n        isResolved = true;\n        resolve();\n      }\n    };\n  });\n  let collectionRef = (0, import_firestore.collection)(db, config.collectionName);\n  if (config.conditions) {\n    config.conditions.forEach((condition) => {\n      collectionRef = (0, import_firestore.query)(collectionRef, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n  }\n  const unsubscribe = (0, import_firestore.onSnapshot)(\n    collectionRef,\n    (snapshot2) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n        config.onFirstTime?.(documents, config);\n        config.extraParsers?.forEach((extraParser) => {\n          extraParser.onFirstTime?.(documents, config);\n        });\n        resolvePromise();\n      } else {\n        const addedDocs = [];\n        const modifiedDocs = [];\n        const removedDocs = [];\n        snapshot2.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            addedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"modified\") {\n            modifiedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"removed\") {\n            removedDocs.push(simpleExtractData(change.doc));\n          }\n        });\n        addedDocs.length && config.onAdd?.(addedDocs, config);\n        modifiedDocs.length && config.onModify?.(modifiedDocs, config);\n        removedDocs.length && config.onRemove?.(removedDocs, config);\n        config.extraParsers?.forEach((extraParser) => {\n          addedDocs.length && extraParser.onAdd?.(addedDocs, config);\n          modifiedDocs.length && extraParser.onModify?.(modifiedDocs, config);\n          removedDocs.length && extraParser.onRemove?.(removedDocs, config);\n        });\n      }\n    },\n    (error) => {\n      console.error(`Error listening to collection: ${config.collectionName}`, error);\n      resolvePromise();\n    }\n  );\n  return { promise, unsubscribe };\n};\n\n// src/helpers/global.ts\nvar import_akeyless_types_commons = require(\"akeyless-types-commons\");\nvar import_axios = __toESM(require(\"axios\"));\n\n// src/helpers/phoneNumber.ts\nvar import_libphonenumber_js = require(\"libphonenumber-js\");\n\n// src/helpers/global.ts\nvar getUserCountryByIp = async () => {\n  try {\n    const response = await import_axios.default.get(\"https://ipapi.co/json/\");\n    return (response.data.country_code || import_akeyless_types_commons.CountryOptions.IL).toLowerCase();\n  } catch (error) {\n    console.error(\"Error fetching Country:\", error);\n    return import_akeyless_types_commons.CountryOptions.IL;\n  }\n};\n\n// src/helpers/forms.ts\nvar import_xregexp = __toESM(require(\"xregexp\"));\nvar textRegex = (0, import_xregexp.default)(\"[^\\\\p{L}\\\\s-]\", \"gu\");\nvar numbersRegex = (0, import_xregexp.default)(\"[^0-9\\\\s-+]\", \"g\");\nvar numbersOnlyRegex = (0, import_xregexp.default)(\"[^0-9]\", \"g\");\nvar priceRegex = (0, import_xregexp.default)(\"[^0-9.]\", \"g\");\nvar emailRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9.@\\\\s-]\", \"gu\");\nvar colorRegex = (0, import_xregexp.default)(\"[^#0-9A-Fa-f]\", \"g\");\nvar carsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9,_]\", \"gu\");\nvar textNumbersRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s+\\\\-]\", \"gu\");\nvar addressRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,\\\\-]\", \"gu\");\nvar chartsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,_@!\\\\-]\", \"gu\");\n\n// src/lib/utils.ts\nvar import_clsx = require(\"clsx\");\nvar import_tailwind_merge = require(\"tailwind-merge\");\n\n// src/hooks/global.ts\nfunction useSafeEffect(callback, dependencies, error_message) {\n  (0, import_react.useEffect)(() => {\n    try {\n      callback();\n    } catch (error) {\n      console.error(error_message || \"Error in useEffect:\", error);\n    }\n  }, dependencies);\n}\nvar useDocumentTitle = (title) => {\n  (0, import_react.useEffect)(() => {\n    document.title = title;\n  }, [title]);\n  return null;\n};\nvar useSnapshotBulk = (configs, label) => {\n  const snapshotsFirstTime = (0, import_react.useRef)([]);\n  const unsubscribeFunctions = (0, import_react.useRef)([]);\n  (0, import_react.useEffect)(() => {\n    const start = performance.now();\n    console.log(`==> ${label || \"Custom snapshots\"} started... `);\n    const snapshotResults = configs.map((config) => snapshot(config, snapshotsFirstTime.current));\n    unsubscribeFunctions.current = snapshotResults.map((result) => result.unsubscribe);\n    Promise.all(snapshotResults.map((result) => result.promise)).then(() => {\n      console.log(`==> ${label || \"Custom snapshots\"} ended. It took ${(performance.now() - start).toFixed(2)} ms`);\n    });\n    return () => {\n      unsubscribeFunctions.current.forEach((unsubscribe) => {\n        if (unsubscribe) {\n          unsubscribe();\n        }\n      });\n    };\n  }, [configs, label]);\n};\nvar useSetUserCountry = (setUserCountry, changLang) => {\n  (0, import_react.useLayoutEffect)(() => {\n    const currentCountry = localStorage.getItem(\"userCountry\");\n    if (!currentCountry) {\n      const updateCountry = async () => {\n        const country = await getUserCountryByIp();\n        changLang(country === import_akeyless_types_commons2.CountryOptions.IL ? \"he\" : \"en\");\n        setUserCountry(country);\n        localStorage.setItem(\"userCountry\", country);\n      };\n      updateCountry();\n    }\n  }, []);\n  return null;\n};\n\n// src/hooks/WebWorker.ts\nvar import_react2 = require(\"react\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  useDocumentTitle,\n  useSafeEffect,\n  useSetUserCountry,\n  useSnapshotBulk\n});\n"]}