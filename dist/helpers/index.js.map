{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\helpers\\index.js"],"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","name","all","target","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","value","helpers_exports","add_document","addressRegex","calculateBearing","auth","carsRegex","cleanNxSites","chartsRegex","cn","colorRegex","displayFormatPhoneNumber","createSelectors","db","delete_document","emailRegex","extractAlertsData","collections","extractBoardsData","extractCanbusData","extractCarsData","extractSiteData","fire_base_TIME_TEMP","extractLocationData","formatCarNumber","extractClientData","get_all_documents","getFormElementValue","getUserCountryByIp","get_document_by_id","handleChange","handleInvalid","handlePaste","initializeUserPermissions","international_israel_phone_format","isInternational","isInternationalIsraelPhone","is_iccid","local_israel_phone_format","multiStringFormat","numbersOnlyRegex","numbersRegex","query_document","query_document_by_conditions","parseMultiSelectInput","parsePermissions","priceRegex","query_documents","query_documents_by_conditions","renderOnce","setState","set_document","simpleExtractData","snapshot","snapshotDocument","storage","textNumbersRegex","textRegex","useStoreValues","useValidation","userNameFormat","exports","__toCommonJS","import_moment","require","import_app","import_storage","import_auth","import_firestore","car_number","cn2","length","import_meta","initApp","isNodeEnv","process","env","firebaseConfig","apiKey","NEXT_PUBLIC_API_KEY","VITE_API_KEY","projectId","NEXT_PUBLIC_PROJECT_ID","VITE_PROJECT_ID","storageBucket","NEXT_PUBLIC_STORAGE_BUCKET","VITE_STORAGE_BUCKET","messagingSenderId","NEXT_PUBLIC_MESSAGING_SENDER_ID","VITE_MESSAGING_SENDER_ID","appId","NEXT_PUBLIC_APP_ID","VITE_APP_ID","app","initializeApp","auth2","getAuth","db2","getFirestore","storage2","getStorage","error","console","clients","collection","cars","users","lastLocations","ermEvents","erm2Events","ruptelaEvents","polygons","polygonEvents","polygonCars","sites","states","app_pro_commands_queue","trips","audit","nx_settings","settings","translations","nx_cars","boards","protection_types","board_types","charge_capacities","Timestamp","now","doc2","data","timestamp","timestamp_seconds","seconds","timestamp_ui","default","unix","format","docData","id","dateUpdated","Date","updated","nanoseconds","dateCreated","created","dateUploaded","uploaded","carData","icon","gov_info","vehicle_type","brand","manufacturer","carId","date_ui","newDate","locationData","latitude","longitude","spd","prev_latitude","prev_longitude","lat","lng","prev_lat","prev_lng","Number","toFixed","collection_path","getDocs","snapshot2","documents","docs","map","doc_id","doc_ref","doc_snap","doc","getDoc","exists","Error","setDoc","merge","include_id","col_ref","addDoc"],"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/helpers/index.ts\nvar helpers_exports = {};\n__export(helpers_exports, {\n  add_document: () => add_document,\n  addressRegex: () => addressRegex,\n  auth: () => auth,\n  calculateBearing: () => calculateBearing,\n  carsRegex: () => carsRegex,\n  chartsRegex: () => chartsRegex,\n  cleanNxSites: () => cleanNxSites,\n  cn: () => cn,\n  collections: () => collections,\n  colorRegex: () => colorRegex,\n  createSelectors: () => createSelectors,\n  db: () => db,\n  delete_document: () => delete_document,\n  displayFormatPhoneNumber: () => displayFormatPhoneNumber,\n  emailRegex: () => emailRegex,\n  extractAlertsData: () => extractAlertsData,\n  extractBoardsData: () => extractBoardsData,\n  extractCanbusData: () => extractCanbusData,\n  extractCarsData: () => extractCarsData,\n  extractClientData: () => extractClientData,\n  extractLocationData: () => extractLocationData,\n  extractSiteData: () => extractSiteData,\n  fire_base_TIME_TEMP: () => fire_base_TIME_TEMP,\n  formatCarNumber: () => formatCarNumber,\n  getFormElementValue: () => getFormElementValue,\n  getUserCountryByIp: () => getUserCountryByIp,\n  get_all_documents: () => get_all_documents,\n  get_document_by_id: () => get_document_by_id,\n  handleChange: () => handleChange,\n  handleInvalid: () => handleInvalid,\n  handlePaste: () => handlePaste,\n  initializeUserPermissions: () => initializeUserPermissions,\n  international_israel_phone_format: () => international_israel_phone_format,\n  isInternational: () => isInternational,\n  isInternationalIsraelPhone: () => isInternationalIsraelPhone,\n  is_iccid: () => is_iccid,\n  local_israel_phone_format: () => local_israel_phone_format,\n  multiStringFormat: () => multiStringFormat,\n  numbersOnlyRegex: () => numbersOnlyRegex,\n  numbersRegex: () => numbersRegex,\n  parseMultiSelectInput: () => parseMultiSelectInput,\n  parsePermissions: () => parsePermissions,\n  priceRegex: () => priceRegex,\n  query_document: () => query_document,\n  query_document_by_conditions: () => query_document_by_conditions,\n  query_documents: () => query_documents,\n  query_documents_by_conditions: () => query_documents_by_conditions,\n  renderOnce: () => renderOnce,\n  setState: () => setState,\n  set_document: () => set_document,\n  simpleExtractData: () => simpleExtractData,\n  snapshot: () => snapshot,\n  snapshotDocument: () => snapshotDocument,\n  storage: () => storage,\n  textNumbersRegex: () => textNumbersRegex,\n  textRegex: () => textRegex,\n  useStoreValues: () => useStoreValues,\n  useValidation: () => useValidation,\n  userNameFormat: () => userNameFormat\n});\nmodule.exports = __toCommonJS(helpers_exports);\n\n// src/helpers/firebase.ts\nvar import_moment = __toESM(require(\"moment\"));\nvar import_app = require(\"firebase/app\");\nvar import_storage = require(\"firebase/storage\");\nvar import_auth = require(\"firebase/auth\");\nvar import_firestore = require(\"firebase/firestore\");\n\n// src/helpers/cars.ts\nvar formatCarNumber = (car_number) => {\n  var cn2 = car_number;\n  if (cn2?.length == 8) return `${cn2[0]}${cn2[1]}${cn2[2]}-${cn2[3]}${cn2[4]}-${cn2[5]}${cn2[6]}${cn2[7]}`;\n  if (cn2?.length == 7) return `${cn2[0]}${cn2[1]}-${cn2[2]}${cn2[3]}${cn2[4]}-${cn2[5]}${cn2[6]}`;\n  if (cn2?.length == 6) return `${cn2[0]}${cn2[1]}-${cn2[2]}${cn2[3]}-${cn2[4]}${cn2[5]}`;\n  if (cn2?.length == 5) return `${cn2[0]}-${cn2[1]}${cn2[2]}-${cn2[3]}${cn2[4]}`;\n  return cn2;\n};\n\n// src/helpers/firebase.ts\nvar import_meta = {};\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import_meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import_meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import_meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import_meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import_meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import_meta.env.VITE_APP_ID\n  };\n  try {\n    const app = (0, import_app.initializeApp)(firebaseConfig);\n    const auth2 = (0, import_auth.getAuth)(app);\n    const db2 = (0, import_firestore.getFirestore)(app);\n    const storage2 = (0, import_storage.getStorage)(app);\n    return { db: db2, auth: auth2, storage: storage2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth, storage } = initApp();\nvar collections = {\n  clients: (0, import_firestore.collection)(db, \"nx-clients\"),\n  sites: (0, import_firestore.collection)(db, \"nx-sites\"),\n  cars: (0, import_firestore.collection)(db, \"units\"),\n  users: (0, import_firestore.collection)(db, \"nx-users\"),\n  lastLocations: (0, import_firestore.collection)(db, \"last_locations\"),\n  ermEvents: (0, import_firestore.collection)(db, \"erm_events_general\"),\n  erm2Events: (0, import_firestore.collection)(db, \"erm2_events_general\"),\n  ruptelaEvents: (0, import_firestore.collection)(db, \"ruptela_events_general\"),\n  polygons: (0, import_firestore.collection)(db, \"nx-polygons\"),\n  polygonEvents: (0, import_firestore.collection)(db, \"polygon_events\"),\n  polygonCars: (0, import_firestore.collection)(db, \"polygon_cars\"),\n  canbus: (0, import_firestore.collection)(db, \"erm_canbus_parameters\"),\n  states: (0, import_firestore.collection)(db, \"erm_states\"),\n  app_pro_commands_queue: (0, import_firestore.collection)(db, \"app_pro_commands_queue\"),\n  trips: (0, import_firestore.collection)(db, \"erm2_trip\"),\n  tripsDetails: (0, import_firestore.collection)(db, \"erm2_trip_details\"),\n  audit: (0, import_firestore.collection)(db, \"nx-audit\"),\n  nx_settings: (0, import_firestore.collection)(db, \"nx-settings\"),\n  settings: (0, import_firestore.collection)(db, \"settings\"),\n  translations: (0, import_firestore.collection)(db, \"nx-translations\"),\n  nx_cars: (0, import_firestore.collection)(db, \"nx-cars\"),\n  boards: (0, import_firestore.collection)(db, \"boards\"),\n  protection_types: (0, import_firestore.collection)(db, \"protectionTypes\"),\n  board_types: (0, import_firestore.collection)(db, \"boardTypes\"),\n  charge_capacities: (0, import_firestore.collection)(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = import_firestore.Timestamp.now;\nvar extractAlertsData = (doc2) => {\n  const data = doc2.data();\n  const { car_number, timestamp } = data;\n  return {\n    ...data,\n    timestamp_seconds: timestamp.seconds,\n    timestamp_ui: import_moment.default.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\n    car_number: formatCarNumber(car_number)\n  };\n};\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar extractSiteData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"DD.MM.YYYY - HH:mm\")\n  };\n};\nvar extractClientData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"HH:mm  DD/MM/YY\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"HH:mm  DD/MM/YY\")\n  };\n};\nvar extractBoardsData = (doc2) => {\n  const data = doc2.data();\n  const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : import_moment.default.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\n  return {\n    ...data,\n    id: doc2.id,\n    uploaded: dateUploaded\n  };\n};\nvar extractCarsData = (doc2) => {\n  const carData = doc2.data();\n  let icon;\n  const gov_info = carData.gov_info;\n  if (gov_info) {\n    if (carData.icon) {\n      icon = carData.icon;\n    } else if (gov_info.vehicle_type === \"atv\") {\n      icon = \"truck\";\n    } else if (gov_info.vehicle_type === \"motorcycle\") {\n      icon = \"motorcycle\";\n    } else {\n      icon = \"car\";\n    }\n  } else {\n    icon = \"car\";\n  }\n  return {\n    ...carData,\n    id: doc2.id,\n    brand: carData.brand || carData.manufacturer,\n    car_number: carData.carId,\n    icon\n  };\n};\nvar extractCanbusData = (doc2) => {\n  const data = doc2.data();\n  const newDate = new Date(data.timestamp.seconds * 1e3);\n  return {\n    ...data,\n    date_ui: (0, import_moment.default)(newDate).format(\"DD/MM/YYYY - HH:mm\")\n  };\n};\nvar extractLocationData = (doc2) => {\n  const locationData = doc2.data();\n  const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\n  return {\n    ...locationData,\n    id: doc2.id,\n    lat: latitude,\n    lng: longitude,\n    prev_lat: prev_latitude,\n    prev_lng: prev_longitude,\n    timestamp: timestamp?.seconds,\n    spd: Number(spd).toFixed(0)\n  };\n};\nvar get_all_documents = async (collection_path) => {\n  try {\n    const snapshot2 = await (0, import_firestore.getDocs)((0, import_firestore.collection)(db, collection_path));\n    const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    return [];\n  }\n};\nvar get_document_by_id = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    const doc_snap = await (0, import_firestore.getDoc)(doc_ref);\n    if (!doc_snap.exists()) {\n      throw new Error(\"Document not found, document id: \" + doc_id);\n    }\n    return simpleExtractData(doc_snap);\n  } catch (error) {\n    console.error(\"Error from get_document_by_id\", error);\n    return null;\n  }\n};\nvar set_document = async (collection_path, doc_id, data) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.setDoc)(doc_ref, data, { merge: true });\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\n    return false;\n  }\n};\nvar add_document = async (collection_path, data, include_id = false) => {\n  try {\n    const col_ref = (0, import_firestore.collection)(db, collection_path);\n    const doc_ref = await (0, import_firestore.addDoc)(col_ref, data);\n    if (include_id) {\n      await (0, import_firestore.setDoc)(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document in collection: ${collection_path}`, error);\n    return false;\n  }\n};\nvar delete_document = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.deleteDoc)(doc_ref);\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\n    return false;\n  }\n};\nvar query_document = async (collection_path, field_name, operator, value, ignore_log = false) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (documents.length < 1) {\n      throw new Error(\n        `No data to return from: \ncollection: ${collection_path}, \nfield_name: ${field_name}, \noperator: ${operator}, \nvalue: ${value}`\n      );\n    }\n    return documents[0];\n  } catch (error) {\n    if (!ignore_log) {\n      console.error(\"Error querying document:\", error);\n    }\n    return null;\n  }\n};\nvar query_documents = async (collection_path, field_name, operator, value) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\n    return [];\n  }\n};\nvar query_documents_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return [];\n  }\n};\nvar query_document_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (!documents[0]) {\n      throw new Error(\"No data returned from DB\");\n    }\n    return documents[0];\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return null;\n  }\n};\nvar snapshot = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  let isResolved = false;\n  const promise = new Promise((resolve) => {\n    console.log(`==> ${config.collectionName} subscribed.`);\n    resolvePromise = () => {\n      if (!isResolved) {\n        isResolved = true;\n        resolve();\n      }\n    };\n  });\n  let collectionRef = (0, import_firestore.collection)(db, config.collectionName);\n  if (config.conditions) {\n    config.conditions.forEach((condition) => {\n      collectionRef = (0, import_firestore.query)(collectionRef, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n  }\n  const unsubscribe = (0, import_firestore.onSnapshot)(\n    collectionRef,\n    (snapshot2) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n        config.onFirstTime?.(documents, config);\n        config.extraParsers?.forEach((extraParser) => {\n          extraParser.onFirstTime?.(documents, config);\n        });\n        resolvePromise();\n      } else {\n        const addedDocs = [];\n        const modifiedDocs = [];\n        const removedDocs = [];\n        snapshot2.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            addedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"modified\") {\n            modifiedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"removed\") {\n            removedDocs.push(simpleExtractData(change.doc));\n          }\n        });\n        addedDocs.length && config.onAdd?.(addedDocs, config);\n        modifiedDocs.length && config.onModify?.(modifiedDocs, config);\n        removedDocs.length && config.onRemove?.(removedDocs, config);\n        config.extraParsers?.forEach((extraParser) => {\n          addedDocs.length && extraParser.onAdd?.(addedDocs, config);\n          modifiedDocs.length && extraParser.onModify?.(modifiedDocs, config);\n          removedDocs.length && extraParser.onRemove?.(removedDocs, config);\n        });\n      }\n    },\n    (error) => {\n      console.error(`Error listening to collection: ${config.collectionName}`, error);\n      resolvePromise();\n    }\n  );\n  return { promise, unsubscribe };\n};\nvar snapshotDocument = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  let isResolved = false;\n  const promise = new Promise((resolve) => {\n    console.log(`==> Document in ${config.collectionName} subscribed.`);\n    resolvePromise = () => {\n      if (!isResolved) {\n        isResolved = true;\n        resolve();\n      }\n    };\n  });\n  const documentRef = (0, import_firestore.doc)(db, config.collectionName, config.documentId);\n  const unsubscribe = (0, import_firestore.onSnapshot)(\n    documentRef,\n    (docSnapshot) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        if (docSnapshot.exists()) {\n          const document2 = simpleExtractData(docSnapshot);\n          if (checkConditions(document2, config.conditions)) {\n            config.onFirstTime?.([document2], config);\n            config.extraParsers?.forEach((extraParser) => {\n              extraParser.onFirstTime?.([document2], config);\n            });\n          } else {\n            console.warn(`Document in ${config.collectionName} does not meet conditions.`);\n          }\n        } else {\n          console.warn(`Document not found in ${config.collectionName}.`);\n        }\n        resolvePromise();\n      } else {\n        if (docSnapshot.exists()) {\n          const document2 = simpleExtractData(docSnapshot);\n          if (checkConditions(document2, config.conditions)) {\n            config.onModify?.([document2], config);\n            config.extraParsers?.forEach((extraParser) => {\n              extraParser.onModify?.([document2], config);\n            });\n          }\n        } else {\n          config.onRemove?.([], config);\n          config.extraParsers?.forEach((extraParser) => {\n            extraParser.onRemove?.([], config);\n          });\n        }\n      }\n    },\n    (error) => {\n      console.error(`Error listening to document in ${config.collectionName}:`, error);\n      resolvePromise();\n    }\n  );\n  return { promise, unsubscribe };\n};\nvar checkConditions = (document2, conditions) => {\n  if (!conditions || conditions.length === 0) return true;\n  return conditions.every((condition) => {\n    const fieldValue = document2[condition.field_name];\n    switch (condition.operator) {\n      case \"==\":\n        return fieldValue === condition.value;\n      case \"!=\":\n        return fieldValue !== condition.value;\n      case \"<\":\n        return fieldValue < condition.value;\n      case \"<=\":\n        return fieldValue <= condition.value;\n      case \">\":\n        return fieldValue > condition.value;\n      case \">=\":\n        return fieldValue >= condition.value;\n      case \"array-contains\":\n        return Array.isArray(fieldValue) && fieldValue.includes(condition.value);\n      default:\n        return false;\n    }\n  });\n};\nvar cleanNxSites = async () => {\n  const clients = (await get_all_documents(\"nx-clients\")).map((v) => v.id);\n  const sites = await get_all_documents(\"nx-sites\");\n  const allSitesToDelete = sites.filter((v) => !clients.includes(v.client));\n  console.log(\"allSitesToDelete\", allSitesToDelete);\n  allSitesToDelete.forEach(async (v) => {\n    await delete_document(\"nx-sites\", v.id);\n    console.log(`Site ${v.id} deleted.`);\n  });\n};\n\n// src/helpers/global.ts\nvar import_akeyless_types_commons = require(\"akeyless-types-commons\");\nvar import_axios = __toESM(require(\"axios\"));\n\n// src/helpers/phoneNumber.ts\nvar import_libphonenumber_js = require(\"libphonenumber-js\");\nvar isInternational = (phone_number) => {\n  return phone_number.startsWith(\"+\");\n};\nvar isInternationalIsraelPhone = (phone_number) => {\n  return phone_number.startsWith(\"+9725\");\n};\nvar local_israel_phone_format = (international_number) => {\n  return international_number.replace(\"+972\", \"0\");\n};\nvar international_israel_phone_format = (phone) => {\n  const validNumber = phone.slice(1, phone.length);\n  return \"+972\".concat(validNumber);\n};\nvar displayFormatPhoneNumber = (phoneNumber) => {\n  if (isInternational(phoneNumber)) {\n    const phoneNumberObject = (0, import_libphonenumber_js.parsePhoneNumberFromString)(phoneNumber);\n    if (!phoneNumberObject) {\n      return phoneNumber;\n    }\n    return phoneNumberObject.formatInternational().replace(/\\s/g, \"-\");\n  }\n  return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n};\nvar is_iccid = (number) => {\n  if (number.length < 19 || number.length > 22) return false;\n  if (!/^\\d+$/.test(number)) return false;\n  if (!number.startsWith(\"89\")) return false;\n  return true;\n};\n\n// src/helpers/global.ts\nvar calculateBearing = (startLat, startLng, endLat, endLng) => {\n  if (startLat === endLat || startLng === endLng) {\n    return 0;\n  }\n  if (startLat === void 0 || startLng === void 0 || endLat === void 0 || endLng === void 0) {\n    return 0;\n  }\n  const startLatRad = startLat * Math.PI / 180;\n  const startLngRad = startLng * Math.PI / 180;\n  const endLatRad = endLat * Math.PI / 180;\n  const endLngRad = endLng * Math.PI / 180;\n  const dLon = endLngRad - startLngRad;\n  const y = Math.sin(dLon) * Math.cos(endLatRad);\n  const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\n  const bearing = Math.atan2(y, x) * 180 / Math.PI;\n  return (bearing + 360) % 360;\n};\nvar renderOnce = () => {\n  return true;\n};\nvar getUserCountryByIp = async () => {\n  try {\n    const response = await import_axios.default.get(\"https://ipapi.co/json/\");\n    return (response.data.country_code || import_akeyless_types_commons.CountryOptions.IL).toLowerCase();\n  } catch (error) {\n    console.error(\"Error fetching Country:\", error);\n    return import_akeyless_types_commons.CountryOptions.IL;\n  }\n};\nvar parsePermissions = (object) => {\n  if (!object?.features) {\n    return {};\n  }\n  const features = object.features;\n  let result = {};\n  features.forEach((feature) => {\n    if (!feature.includes(\"__\")) {\n      return;\n    }\n    const [featureType, featureName] = feature.split(\"__\");\n    if (!featureType || !featureName) {\n      return;\n    }\n    if (!result[featureType]) {\n      result[featureType] = {};\n    }\n    result[featureType][featureName] = true;\n  });\n  return result;\n};\nvar initializeUserPermissions = async ({ phoneNumber, firstTimeArray, getUpdatePermissions }) => {\n  let unsubscribe = null;\n  let permissions = {};\n  try {\n    const { promise, unsubscribe: unsubscribeSnapshot } = snapshot(\n      {\n        collectionName: \"nx-users\",\n        conditions: [{ field_name: \"phone_number\", operator: \"in\", value: [phoneNumber, local_israel_phone_format(phoneNumber)] }],\n        onFirstTime: (docs) => {\n          if (!docs.length) {\n            throw new Error(\"User not found\");\n          }\n          permissions = parsePermissions(docs[0]);\n          getUpdatePermissions(parsePermissions(docs[0]));\n        },\n        onModify: (docs) => {\n          getUpdatePermissions(parsePermissions(docs[0]));\n        }\n      },\n      firstTimeArray\n    );\n    unsubscribe = unsubscribeSnapshot;\n    await promise;\n    return { unsubscribe, permissions };\n  } catch (error) {\n    if (unsubscribe) {\n      unsubscribe();\n    }\n    console.error(\"Error initializing user permissions:\", error.message);\n    throw error;\n  }\n};\nvar userNameFormat = (user) => {\n  return `${user?.first_name || \"\"} ${user?.last_name || \"\"}`.trim();\n};\nvar multiStringFormat = (str1, str2, str3) => {\n  return `${str1} ${str2 || \"\"} ${str3 || \"\"}`.trim();\n};\n\n// src/helpers/forms.ts\nvar import_xregexp = __toESM(require(\"xregexp\"));\nvar textRegex = (0, import_xregexp.default)(\"[^\\\\p{L}\\\\s-]\", \"gu\");\nvar numbersRegex = (0, import_xregexp.default)(\"[^0-9\\\\s-+]\", \"g\");\nvar numbersOnlyRegex = (0, import_xregexp.default)(\"[^0-9]\", \"g\");\nvar priceRegex = (0, import_xregexp.default)(\"[^0-9.]\", \"g\");\nvar emailRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9.@\\\\s-]\", \"gu\");\nvar colorRegex = (0, import_xregexp.default)(\"[^#0-9A-Fa-f]\", \"g\");\nvar carsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9,_]\", \"gu\");\nvar textNumbersRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s+\\\\-]\", \"gu\");\nvar addressRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,\\\\-]\", \"gu\");\nvar chartsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,_@!\\\\-]\", \"gu\");\nvar handleChange = (e) => {\n  e.target.setCustomValidity(\"\");\n  const validation = e.target.getAttribute(\"data-validation\");\n  if (validation === \"text\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, textRegex, \"\");\n  } else if (validation === \"numbers\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, numbersRegex, \"\");\n  } else if (validation === \"numbersOnly\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, numbersOnlyRegex, \"\");\n  } else if (validation === \"price\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, priceRegex, \"\");\n  } else if (validation === \"textNumbers\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, textNumbersRegex, \"\");\n  } else if (validation === \"email\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, emailRegex, \"\");\n  } else if (validation === \"color\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, colorRegex, \"\");\n  } else if (validation === \"address\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, addressRegex, \"\");\n  } else if (validation === \"cars\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, carsRegex, \"\");\n  } else if (validation === \"charts\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, chartsRegex, \"\");\n  }\n};\nvar handlePaste = (e) => {\n  const validation = e.currentTarget.getAttribute(\"data-validation\");\n  let pasteData = e.clipboardData.getData(\"text\");\n  if (validation === \"text\") {\n    pasteData = import_xregexp.default.replace(pasteData, textRegex, \"\");\n  } else if (validation === \"numbers\") {\n    pasteData = import_xregexp.default.replace(pasteData, numbersRegex, \"\");\n  } else if (validation === \"numbersOnly\") {\n    pasteData = import_xregexp.default.replace(pasteData, numbersOnlyRegex, \"\");\n  } else if (validation === \"price\") {\n    pasteData = import_xregexp.default.replace(pasteData, priceRegex, \"\");\n  } else if (validation === \"textNumbers\") {\n    pasteData = import_xregexp.default.replace(pasteData, textNumbersRegex, \"\");\n  } else if (validation === \"email\") {\n    pasteData = import_xregexp.default.replace(pasteData, emailRegex, \"\");\n  } else if (validation === \"color\") {\n    pasteData = import_xregexp.default.replace(pasteData, colorRegex, \"\");\n  } else if (validation === \"address\") {\n    pasteData = import_xregexp.default.replace(pasteData, addressRegex, \"\");\n  } else if (validation === \"cars\") {\n    pasteData = import_xregexp.default.replace(pasteData, carsRegex, \"\");\n  } else if (validation === \"charts\") {\n    pasteData = import_xregexp.default.replace(pasteData, chartsRegex, \"\");\n  }\n  e.preventDefault();\n  document.execCommand(\"insertText\", false, pasteData);\n};\nvar handleInvalid = (e, requireError) => {\n  e.target.setCustomValidity(requireError || \"This filed is required !\");\n};\nvar useValidation = (validationType, requireError) => {\n  return {\n    onChange: handleChange,\n    onPaste: handlePaste,\n    onInvalid: (e) => handleInvalid(e, requireError),\n    \"data-validation\": validationType\n  };\n};\nvar getFormElementValue = (form, name) => {\n  return form.elements.namedItem(name)?.value || \"\";\n};\nvar parseMultiSelectInput = (input) => {\n  const value = JSON.parse(input) || [];\n  return value.map((v) => v.value);\n};\n\n// src/helpers/store.ts\nvar setState = (updater, set, stateName) => {\n  return set((state) => ({\n    [stateName]: typeof updater === \"function\" ? updater(state[stateName]) : updater\n  }));\n};\nvar createSelectors = (store) => {\n  let selectors = {};\n  for (let k of Object.keys(store.getState())) {\n    selectors[k] = () => store((s) => s[k]);\n  }\n  return selectors;\n};\nvar useStoreValues = (store, keys) => {\n  const result = {};\n  keys.forEach((key) => {\n    result[key] = store.use[key]();\n  });\n  return result;\n};\n\n// src/lib/utils.ts\nvar import_clsx = require(\"clsx\");\nvar import_tailwind_merge = require(\"tailwind-merge\");\nfunction cn(...inputs) {\n  return (0, import_tailwind_merge.twMerge)((0, import_clsx.clsx)(inputs));\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  add_document,\n  addressRegex,\n  auth,\n  calculateBearing,\n  carsRegex,\n  chartsRegex,\n  cleanNxSites,\n  cn,\n  collections,\n  colorRegex,\n  createSelectors,\n  db,\n  delete_document,\n  displayFormatPhoneNumber,\n  emailRegex,\n  extractAlertsData,\n  extractBoardsData,\n  extractCanbusData,\n  extractCarsData,\n  extractClientData,\n  extractLocationData,\n  extractSiteData,\n  fire_base_TIME_TEMP,\n  formatCarNumber,\n  getFormElementValue,\n  getUserCountryByIp,\n  get_all_documents,\n  get_document_by_id,\n  handleChange,\n  handleInvalid,\n  handlePaste,\n  initializeUserPermissions,\n  international_israel_phone_format,\n  isInternational,\n  isInternationalIsraelPhone,\n  is_iccid,\n  local_israel_phone_format,\n  multiStringFormat,\n  numbersOnlyRegex,\n  numbersRegex,\n  parseMultiSelectInput,\n  parsePermissions,\n  priceRegex,\n  query_document,\n  query_document_by_conditions,\n  query_documents,\n  query_documents_by_conditions,\n  renderOnce,\n  setState,\n  set_document,\n  simpleExtractData,\n  snapshot,\n  snapshotDocument,\n  storage,\n  textNumbersRegex,\n  textRegex,\n  useStoreValues,\n  useValidation,\n  userNameFormat\n});\n"]}