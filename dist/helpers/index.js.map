{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\helpers\\index.js"],"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","__esModule","__toCommonJS","value","helpers_exports","add_document","addressRegex","auth","calculateBearing","chartsRegex","carsRegex","cleanNxSites","collections","delete_document","colorRegex","createSelectors","db","displayFormatPhoneNumber","emailRegex","cn","extractAlertsData","extractBoardsData","extractCanbusData","extractCarsData","extractLocationData","extractSiteData","extractClientData","fire_base_TIME_TEMP","getLocationUrl","formatCarNumber","getFormElementValue","getUserCountryByIp","get_all_documents","get_document_by_id","handleChange","handleInvalid","handlePaste","initializeUserPermissions","international_israel_phone_format","isInternational","isInternationalIsraelPhone","is_iccid","local_israel_phone_format","multiStringFormat","parsePermissions","numbersOnlyRegex","numbersRegex","parseMultiSelectInput","priceRegex","query_document","query_document_by_conditions","query_documents","query_documents_by_conditions","renderOnce","setState","set_document","simpleExtractData","snapshot","snapshotDocument","sort_by_timestamp","storage","textNumbersRegex","textRegex","timestamp_to_millis","timestamp_to_string","useStoreValues","useValidation","userNameFormat","exports","import_moment","import_app","require","import_storage","import_auth","import_firestore","car_number","cn2","length","import_meta","initApp","isNodeEnv","process","env","firebaseConfig","apiKey","NEXT_PUBLIC_API_KEY","VITE_API_KEY","authDomain","NEXT_PUBLIC_AUTH_DOMAIN","VITE_AUTH_DOMAIN","projectId","NEXT_PUBLIC_PROJECT_ID","VITE_PROJECT_ID","storageBucket","NEXT_PUBLIC_STORAGE_BUCKET","VITE_STORAGE_BUCKET","messagingSenderId","NEXT_PUBLIC_MESSAGING_SENDER_ID","VITE_MESSAGING_SENDER_ID","appId","NEXT_PUBLIC_APP_ID","VITE_APP_ID","app","initializeApp","auth2","getAuth","db2","getFirestore","storage2","getStorage","error","console","sites","collection","cars","users","lastLocations","ermEvents","erm2Events","ruptelaEvents","polygons","polygonEvents","polygonCars","canbus","states","app_pro_commands_queue","trips","tripsDetails","audit","nx_settings","settings","translations","nx_cars","boards","protection_types","board_types","charge_capacities","Timestamp","now","doc2","data","timestamp","timestamp_seconds","seconds","docData","id","dateUpdated","Date","updated","nanoseconds","dateCreated","created","default","format","dateUploaded","uploaded","unix","carData","icon","gov_info","vehicle_type","brand","manufacturer","carId","newDate","date_ui","locationData","latitude","longitude","spd","prev_latitude","prev_longitude","lat","lng","prev_lat","prev_lng","collection_path","snapshot2","documents","getDocs","docs","map","doc_id","doc_ref","doc_snap","doc","getDoc","exists","Error","setDoc","merge","include_id","col_ref","addDoc","deleteDoc"],"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/helpers/index.ts\nvar helpers_exports = {};\n__export(helpers_exports, {\n  add_document: () => add_document,\n  addressRegex: () => addressRegex,\n  auth: () => auth,\n  calculateBearing: () => calculateBearing,\n  carsRegex: () => carsRegex,\n  chartsRegex: () => chartsRegex,\n  cleanNxSites: () => cleanNxSites,\n  cn: () => cn,\n  collections: () => collections,\n  colorRegex: () => colorRegex,\n  createSelectors: () => createSelectors,\n  db: () => db,\n  delete_document: () => delete_document,\n  displayFormatPhoneNumber: () => displayFormatPhoneNumber,\n  emailRegex: () => emailRegex,\n  extractAlertsData: () => extractAlertsData,\n  extractBoardsData: () => extractBoardsData,\n  extractCanbusData: () => extractCanbusData,\n  extractCarsData: () => extractCarsData,\n  extractClientData: () => extractClientData,\n  extractLocationData: () => extractLocationData,\n  extractSiteData: () => extractSiteData,\n  fire_base_TIME_TEMP: () => fire_base_TIME_TEMP,\n  formatCarNumber: () => formatCarNumber,\n  getFormElementValue: () => getFormElementValue,\n  getLocationUrl: () => getLocationUrl,\n  getUserCountryByIp: () => getUserCountryByIp,\n  get_all_documents: () => get_all_documents,\n  get_document_by_id: () => get_document_by_id,\n  handleChange: () => handleChange,\n  handleInvalid: () => handleInvalid,\n  handlePaste: () => handlePaste,\n  initializeUserPermissions: () => initializeUserPermissions,\n  international_israel_phone_format: () => international_israel_phone_format,\n  isInternational: () => isInternational,\n  isInternationalIsraelPhone: () => isInternationalIsraelPhone,\n  is_iccid: () => is_iccid,\n  local_israel_phone_format: () => local_israel_phone_format,\n  multiStringFormat: () => multiStringFormat,\n  numbersOnlyRegex: () => numbersOnlyRegex,\n  numbersRegex: () => numbersRegex,\n  parseMultiSelectInput: () => parseMultiSelectInput,\n  parsePermissions: () => parsePermissions,\n  priceRegex: () => priceRegex,\n  query_document: () => query_document,\n  query_document_by_conditions: () => query_document_by_conditions,\n  query_documents: () => query_documents,\n  query_documents_by_conditions: () => query_documents_by_conditions,\n  renderOnce: () => renderOnce,\n  setState: () => setState,\n  set_document: () => set_document,\n  simpleExtractData: () => simpleExtractData,\n  snapshot: () => snapshot,\n  snapshotDocument: () => snapshotDocument,\n  sort_by_timestamp: () => sort_by_timestamp,\n  storage: () => storage,\n  textNumbersRegex: () => textNumbersRegex,\n  textRegex: () => textRegex,\n  timestamp_to_millis: () => timestamp_to_millis,\n  timestamp_to_string: () => timestamp_to_string,\n  useStoreValues: () => useStoreValues,\n  useValidation: () => useValidation,\n  userNameFormat: () => userNameFormat\n});\nmodule.exports = __toCommonJS(helpers_exports);\n\n// src/helpers/firebase.ts\nvar import_moment = __toESM(require(\"moment\"));\nvar import_app = require(\"firebase/app\");\nvar import_storage = require(\"firebase/storage\");\nvar import_auth = require(\"firebase/auth\");\nvar import_firestore = require(\"firebase/firestore\");\n\n// src/helpers/cars.ts\nvar formatCarNumber = (car_number) => {\n  var cn2 = car_number;\n  if (cn2?.length == 8) return `${cn2[0]}${cn2[1]}${cn2[2]}-${cn2[3]}${cn2[4]}-${cn2[5]}${cn2[6]}${cn2[7]}`;\n  if (cn2?.length == 7) return `${cn2[0]}${cn2[1]}-${cn2[2]}${cn2[3]}${cn2[4]}-${cn2[5]}${cn2[6]}`;\n  if (cn2?.length == 6) return `${cn2[0]}${cn2[1]}-${cn2[2]}${cn2[3]}-${cn2[4]}${cn2[5]}`;\n  if (cn2?.length == 5) return `${cn2[0]}-${cn2[1]}${cn2[2]}-${cn2[3]}${cn2[4]}`;\n  return cn2;\n};\n\n// src/helpers/firebase.ts\nvar import_meta = {};\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import_meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import_meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import_meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import_meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import_meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import_meta.env.VITE_APP_ID\n  };\n  try {\n    const app = (0, import_app.initializeApp)(firebaseConfig);\n    const auth2 = (0, import_auth.getAuth)(app);\n    const db2 = (0, import_firestore.getFirestore)(app);\n    const storage2 = (0, import_storage.getStorage)(app);\n    return { db: db2, auth: auth2, storage: storage2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth, storage } = initApp();\nvar collections = {\n  clients: (0, import_firestore.collection)(db, \"nx-clients\"),\n  sites: (0, import_firestore.collection)(db, \"nx-sites\"),\n  cars: (0, import_firestore.collection)(db, \"units\"),\n  users: (0, import_firestore.collection)(db, \"nx-users\"),\n  lastLocations: (0, import_firestore.collection)(db, \"last_locations\"),\n  ermEvents: (0, import_firestore.collection)(db, \"erm_events_general\"),\n  erm2Events: (0, import_firestore.collection)(db, \"erm2_events_general\"),\n  ruptelaEvents: (0, import_firestore.collection)(db, \"ruptela_events_general\"),\n  polygons: (0, import_firestore.collection)(db, \"nx-polygons\"),\n  polygonEvents: (0, import_firestore.collection)(db, \"polygon_events\"),\n  polygonCars: (0, import_firestore.collection)(db, \"polygon_cars\"),\n  canbus: (0, import_firestore.collection)(db, \"erm_canbus_parameters\"),\n  states: (0, import_firestore.collection)(db, \"erm_states\"),\n  app_pro_commands_queue: (0, import_firestore.collection)(db, \"app_pro_commands_queue\"),\n  trips: (0, import_firestore.collection)(db, \"erm2_trip\"),\n  tripsDetails: (0, import_firestore.collection)(db, \"erm2_trip_details\"),\n  audit: (0, import_firestore.collection)(db, \"nx-audit\"),\n  nx_settings: (0, import_firestore.collection)(db, \"nx-settings\"),\n  settings: (0, import_firestore.collection)(db, \"settings\"),\n  translations: (0, import_firestore.collection)(db, \"nx-translations\"),\n  nx_cars: (0, import_firestore.collection)(db, \"nx-cars\"),\n  boards: (0, import_firestore.collection)(db, \"boards\"),\n  protection_types: (0, import_firestore.collection)(db, \"protectionTypes\"),\n  board_types: (0, import_firestore.collection)(db, \"boardTypes\"),\n  charge_capacities: (0, import_firestore.collection)(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = import_firestore.Timestamp.now;\nvar extractAlertsData = (doc2) => {\n  const data = doc2.data();\n  const { car_number, timestamp } = data;\n  return {\n    ...data,\n    timestamp_seconds: timestamp.seconds,\n    timestamp_ui: import_moment.default.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\n    car_number: formatCarNumber(car_number)\n  };\n};\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar extractSiteData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"DD.MM.YYYY - HH:mm\")\n  };\n};\nvar extractClientData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"HH:mm  DD/MM/YY\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"HH:mm  DD/MM/YY\")\n  };\n};\nvar extractBoardsData = (doc2) => {\n  const data = doc2.data();\n  const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : import_moment.default.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\n  return {\n    ...data,\n    id: doc2.id,\n    uploaded: dateUploaded\n  };\n};\nvar extractCarsData = (doc2) => {\n  const carData = doc2.data();\n  let icon;\n  const gov_info = carData.gov_info;\n  if (gov_info) {\n    if (carData.icon) {\n      icon = carData.icon;\n    } else if (gov_info.vehicle_type === \"atv\") {\n      icon = \"truck\";\n    } else if (gov_info.vehicle_type === \"motorcycle\") {\n      icon = \"motorcycle\";\n    } else {\n      icon = \"car\";\n    }\n  } else {\n    icon = \"car\";\n  }\n  return {\n    ...carData,\n    id: doc2.id,\n    brand: carData.brand || carData.manufacturer,\n    car_number: carData.carId,\n    icon\n  };\n};\nvar extractCanbusData = (doc2) => {\n  const data = doc2.data();\n  const newDate = new Date(data.timestamp.seconds * 1e3);\n  return {\n    ...data,\n    date_ui: (0, import_moment.default)(newDate).format(\"DD/MM/YYYY - HH:mm\")\n  };\n};\nvar extractLocationData = (doc2) => {\n  const locationData = doc2.data();\n  const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\n  return {\n    ...locationData,\n    id: doc2.id,\n    lat: latitude,\n    lng: longitude,\n    prev_lat: prev_latitude,\n    prev_lng: prev_longitude,\n    timestamp: timestamp?.seconds,\n    spd: Number(spd).toFixed(0)\n  };\n};\nvar get_all_documents = async (collection_path) => {\n  try {\n    const snapshot2 = await (0, import_firestore.getDocs)((0, import_firestore.collection)(db, collection_path));\n    const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    return [];\n  }\n};\nvar get_document_by_id = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    const doc_snap = await (0, import_firestore.getDoc)(doc_ref);\n    if (!doc_snap.exists()) {\n      throw new Error(\"Document not found, document id: \" + doc_id);\n    }\n    return simpleExtractData(doc_snap);\n  } catch (error) {\n    console.error(\"Error from get_document_by_id\", error);\n    return null;\n  }\n};\nvar set_document = async (collection_path, doc_id, data) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.setDoc)(doc_ref, data, { merge: true });\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\n    return false;\n  }\n};\nvar add_document = async (collection_path, data, include_id = false) => {\n  try {\n    const col_ref = (0, import_firestore.collection)(db, collection_path);\n    const doc_ref = await (0, import_firestore.addDoc)(col_ref, data);\n    if (include_id) {\n      await (0, import_firestore.setDoc)(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document in collection: ${collection_path}`, error);\n    return false;\n  }\n};\nvar delete_document = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.deleteDoc)(doc_ref);\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\n    return false;\n  }\n};\nvar query_document = async (collection_path, field_name, operator, value, ignore_log = false) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (documents.length < 1) {\n      throw new Error(\n        `No data to return from: \ncollection: ${collection_path}, \nfield_name: ${field_name}, \noperator: ${operator}, \nvalue: ${value}`\n      );\n    }\n    return documents[0];\n  } catch (error) {\n    if (!ignore_log) {\n      console.error(\"Error querying document:\", error);\n    }\n    return null;\n  }\n};\nvar query_documents = async (collection_path, field_name, operator, value) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\n    return [];\n  }\n};\nvar query_documents_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return [];\n  }\n};\nvar query_document_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (!documents[0]) {\n      throw new Error(\"No data returned from DB\");\n    }\n    return documents[0];\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return null;\n  }\n};\nvar snapshot = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  let isResolved = false;\n  const promise = new Promise((resolve) => {\n    console.log(`==> ${config.collectionName} subscribed.`);\n    resolvePromise = () => {\n      if (!isResolved) {\n        isResolved = true;\n        resolve();\n      }\n    };\n  });\n  let collectionRef = (0, import_firestore.collection)(db, config.collectionName);\n  if (config.conditions) {\n    config.conditions.forEach((condition) => {\n      collectionRef = (0, import_firestore.query)(collectionRef, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n  }\n  const unsubscribe = (0, import_firestore.onSnapshot)(\n    collectionRef,\n    (snapshot2) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n        config.onFirstTime?.(documents, config);\n        config.extraParsers?.forEach((extraParser) => {\n          extraParser.onFirstTime?.(documents, config);\n        });\n        resolvePromise();\n      } else {\n        const addedDocs = [];\n        const modifiedDocs = [];\n        const removedDocs = [];\n        snapshot2.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            addedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"modified\") {\n            modifiedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"removed\") {\n            removedDocs.push(simpleExtractData(change.doc));\n          }\n        });\n        addedDocs.length && config.onAdd?.(addedDocs, config);\n        modifiedDocs.length && config.onModify?.(modifiedDocs, config);\n        removedDocs.length && config.onRemove?.(removedDocs, config);\n        config.extraParsers?.forEach((extraParser) => {\n          addedDocs.length && extraParser.onAdd?.(addedDocs, config);\n          modifiedDocs.length && extraParser.onModify?.(modifiedDocs, config);\n          removedDocs.length && extraParser.onRemove?.(removedDocs, config);\n        });\n      }\n    },\n    (error) => {\n      console.error(`Error listening to collection: ${config.collectionName}`, error);\n      resolvePromise();\n    }\n  );\n  return { promise, unsubscribe };\n};\nvar snapshotDocument = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  let isResolved = false;\n  const promise = new Promise((resolve) => {\n    console.log(`==> Document in ${config.collectionName} subscribed.`);\n    resolvePromise = () => {\n      if (!isResolved) {\n        isResolved = true;\n        resolve();\n      }\n    };\n  });\n  const documentRef = (0, import_firestore.doc)(db, config.collectionName, config.documentId);\n  const unsubscribe = (0, import_firestore.onSnapshot)(\n    documentRef,\n    (docSnapshot) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        if (docSnapshot.exists()) {\n          const document2 = simpleExtractData(docSnapshot);\n          if (checkConditions(document2, config.conditions)) {\n            config.onFirstTime?.([document2], config);\n            config.extraParsers?.forEach((extraParser) => {\n              extraParser.onFirstTime?.([document2], config);\n            });\n          } else {\n            console.warn(`Document in ${config.collectionName} does not meet conditions.`);\n          }\n        } else {\n          console.warn(`Document not found in ${config.collectionName}.`);\n        }\n        resolvePromise();\n      } else {\n        if (docSnapshot.exists()) {\n          const document2 = simpleExtractData(docSnapshot);\n          if (checkConditions(document2, config.conditions)) {\n            config.onModify?.([document2], config);\n            config.extraParsers?.forEach((extraParser) => {\n              extraParser.onModify?.([document2], config);\n            });\n          }\n        } else {\n          config.onRemove?.([], config);\n          config.extraParsers?.forEach((extraParser) => {\n            extraParser.onRemove?.([], config);\n          });\n        }\n      }\n    },\n    (error) => {\n      console.error(`Error listening to document in ${config.collectionName}:`, error);\n      resolvePromise();\n    }\n  );\n  return { promise, unsubscribe };\n};\nvar checkConditions = (document2, conditions) => {\n  if (!conditions || conditions.length === 0) return true;\n  return conditions.every((condition) => {\n    const fieldValue = document2[condition.field_name];\n    switch (condition.operator) {\n      case \"==\":\n        return fieldValue === condition.value;\n      case \"!=\":\n        return fieldValue !== condition.value;\n      case \"<\":\n        return fieldValue < condition.value;\n      case \"<=\":\n        return fieldValue <= condition.value;\n      case \">\":\n        return fieldValue > condition.value;\n      case \">=\":\n        return fieldValue >= condition.value;\n      case \"array-contains\":\n        return Array.isArray(fieldValue) && fieldValue.includes(condition.value);\n      default:\n        return false;\n    }\n  });\n};\nvar cleanNxSites = async () => {\n  const clients = (await get_all_documents(\"nx-clients\")).map((v) => v.id);\n  const sites = await get_all_documents(\"nx-sites\");\n  const allSitesToDelete = sites.filter((v) => !clients.includes(v.client));\n  console.log(\"allSitesToDelete\", allSitesToDelete);\n  allSitesToDelete.forEach(async (v) => {\n    await delete_document(\"nx-sites\", v.id);\n    console.log(`Site ${v.id} deleted.`);\n  });\n};\n\n// src/helpers/global.ts\nvar import_akeyless_types_commons = require(\"akeyless-types-commons\");\nvar import_axios = __toESM(require(\"axios\"));\n\n// src/helpers/phoneNumber.ts\nvar import_libphonenumber_js = require(\"libphonenumber-js\");\nvar isInternational = (phone_number) => {\n  return phone_number.startsWith(\"+\");\n};\nvar isInternationalIsraelPhone = (phone_number) => {\n  return phone_number.startsWith(\"+9725\");\n};\nvar local_israel_phone_format = (international_number) => {\n  return international_number.replace(\"+972\", \"0\");\n};\nvar international_israel_phone_format = (phone) => {\n  const validNumber = phone.slice(1, phone.length);\n  return \"+972\".concat(validNumber);\n};\nvar displayFormatPhoneNumber = (phoneNumber) => {\n  if (isInternational(phoneNumber)) {\n    const phoneNumberObject = (0, import_libphonenumber_js.parsePhoneNumberFromString)(phoneNumber);\n    if (!phoneNumberObject) {\n      return phoneNumber;\n    }\n    return phoneNumberObject.formatInternational().replace(/\\s/g, \"\");\n  }\n  return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n};\nvar is_iccid = (number) => {\n  if (number.length < 19 || number.length > 22) return false;\n  if (!/^\\d+$/.test(number)) return false;\n  if (!number.startsWith(\"89\")) return false;\n  return true;\n};\n\n// src/helpers/global.ts\nvar calculateBearing = (startLat, startLng, endLat, endLng) => {\n  if (startLat === endLat || startLng === endLng) {\n    return 0;\n  }\n  if (startLat === void 0 || startLng === void 0 || endLat === void 0 || endLng === void 0) {\n    return 0;\n  }\n  const startLatRad = startLat * Math.PI / 180;\n  const startLngRad = startLng * Math.PI / 180;\n  const endLatRad = endLat * Math.PI / 180;\n  const endLngRad = endLng * Math.PI / 180;\n  const dLon = endLngRad - startLngRad;\n  const y = Math.sin(dLon) * Math.cos(endLatRad);\n  const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\n  const bearing = Math.atan2(y, x) * 180 / Math.PI;\n  return (bearing + 360) % 360;\n};\nvar renderOnce = () => {\n  return true;\n};\nvar getUserCountryByIp = async () => {\n  try {\n    const response = await import_axios.default.get(\"https://ipapi.co/json/\");\n    return (response.data.country_code || import_akeyless_types_commons.CountryOptions.IL).toLowerCase();\n  } catch (error) {\n    console.error(\"Error fetching Country:\", error);\n    return import_akeyless_types_commons.CountryOptions.IL;\n  }\n};\nvar parsePermissions = (object) => {\n  if (!object?.features) {\n    return {};\n  }\n  const features = object.features;\n  let result = {};\n  features.forEach((feature) => {\n    if (!feature.includes(\"__\")) {\n      return;\n    }\n    const [featureType, featureName] = feature.split(\"__\");\n    if (!featureType || !featureName) {\n      return;\n    }\n    if (!result[featureType]) {\n      result[featureType] = {};\n    }\n    result[featureType][featureName] = true;\n  });\n  return result;\n};\nvar initializeUserPermissions = async ({ phoneNumber, firstTimeArray, getUpdatePermissions }) => {\n  let unsubscribe = null;\n  let permissions = {};\n  try {\n    const { promise, unsubscribe: unsubscribeSnapshot } = snapshot(\n      {\n        collectionName: \"nx-users\",\n        conditions: [{ field_name: \"phone_number\", operator: \"in\", value: [phoneNumber, local_israel_phone_format(phoneNumber)] }],\n        onFirstTime: (docs) => {\n          if (!docs.length) {\n            throw new Error(\"User not found\");\n          }\n          permissions = parsePermissions(docs[0]);\n          getUpdatePermissions(parsePermissions(docs[0]));\n        },\n        onModify: (docs) => {\n          getUpdatePermissions(parsePermissions(docs[0]));\n        }\n      },\n      firstTimeArray\n    );\n    unsubscribe = unsubscribeSnapshot;\n    await promise;\n    return { unsubscribe, permissions };\n  } catch (error) {\n    if (unsubscribe) {\n      unsubscribe();\n    }\n    console.error(\"Error initializing user permissions:\", error.message);\n    throw error;\n  }\n};\nvar userNameFormat = (user) => {\n  return `${user?.first_name || \"\"} ${user?.last_name || \"\"}`.trim();\n};\nvar multiStringFormat = (str1, str2, str3) => {\n  return `${str1} ${str2 || \"\"} ${str3 || \"\"}`.trim();\n};\nvar getLocationUrl = (lang, lat) => {\n  return `https://www.google.com/maps?q=${lang},${lat}`;\n};\n\n// src/helpers/forms.ts\nvar import_xregexp = __toESM(require(\"xregexp\"));\nvar textRegex = (0, import_xregexp.default)(\"[^\\\\p{L}\\\\s-]\", \"gu\");\nvar numbersRegex = (0, import_xregexp.default)(\"[^0-9\\\\s-+]\", \"g\");\nvar numbersOnlyRegex = (0, import_xregexp.default)(\"[^0-9]\", \"g\");\nvar priceRegex = (0, import_xregexp.default)(\"[^0-9.]\", \"g\");\nvar emailRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9.@\\\\s-]\", \"gu\");\nvar colorRegex = (0, import_xregexp.default)(\"[^#0-9A-Fa-f]\", \"g\");\nvar carsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9,_]\", \"gu\");\nvar textNumbersRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s+\\\\-]\", \"gu\");\nvar addressRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,\\\\-]\", \"gu\");\nvar chartsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,_@!\\\\-]\", \"gu\");\nvar handleChange = (e) => {\n  e.target.setCustomValidity(\"\");\n  const validation = e.target.getAttribute(\"data-validation\");\n  if (validation === \"text\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, textRegex, \"\");\n  } else if (validation === \"numbers\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, numbersRegex, \"\");\n  } else if (validation === \"numbersOnly\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, numbersOnlyRegex, \"\");\n  } else if (validation === \"price\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, priceRegex, \"\");\n  } else if (validation === \"textNumbers\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, textNumbersRegex, \"\");\n  } else if (validation === \"email\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, emailRegex, \"\");\n  } else if (validation === \"color\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, colorRegex, \"\");\n  } else if (validation === \"address\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, addressRegex, \"\");\n  } else if (validation === \"cars\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, carsRegex, \"\");\n  } else if (validation === \"charts\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, chartsRegex, \"\");\n  }\n};\nvar handlePaste = (e) => {\n  const validation = e.currentTarget.getAttribute(\"data-validation\");\n  let pasteData = e.clipboardData.getData(\"text\");\n  if (validation === \"text\") {\n    pasteData = import_xregexp.default.replace(pasteData, textRegex, \"\");\n  } else if (validation === \"numbers\") {\n    pasteData = import_xregexp.default.replace(pasteData, numbersRegex, \"\");\n  } else if (validation === \"numbersOnly\") {\n    pasteData = import_xregexp.default.replace(pasteData, numbersOnlyRegex, \"\");\n  } else if (validation === \"price\") {\n    pasteData = import_xregexp.default.replace(pasteData, priceRegex, \"\");\n  } else if (validation === \"textNumbers\") {\n    pasteData = import_xregexp.default.replace(pasteData, textNumbersRegex, \"\");\n  } else if (validation === \"email\") {\n    pasteData = import_xregexp.default.replace(pasteData, emailRegex, \"\");\n  } else if (validation === \"color\") {\n    pasteData = import_xregexp.default.replace(pasteData, colorRegex, \"\");\n  } else if (validation === \"address\") {\n    pasteData = import_xregexp.default.replace(pasteData, addressRegex, \"\");\n  } else if (validation === \"cars\") {\n    pasteData = import_xregexp.default.replace(pasteData, carsRegex, \"\");\n  } else if (validation === \"charts\") {\n    pasteData = import_xregexp.default.replace(pasteData, chartsRegex, \"\");\n  }\n  e.preventDefault();\n  document.execCommand(\"insertText\", false, pasteData);\n};\nvar handleInvalid = (e, requireError) => {\n  e.target.setCustomValidity(requireError || \"This filed is required !\");\n};\nvar useValidation = (validationType, requireError) => {\n  return {\n    onChange: handleChange,\n    onPaste: handlePaste,\n    onInvalid: (e) => handleInvalid(e, requireError),\n    \"data-validation\": validationType\n  };\n};\nvar getFormElementValue = (form, name) => {\n  return form.elements.namedItem(name)?.value || \"\";\n};\nvar parseMultiSelectInput = (input) => {\n  const value = JSON.parse(input) || [];\n  return value.map((v) => v.value);\n};\n\n// src/helpers/store.ts\nvar setState = (updater, set, stateName) => {\n  return set((state) => ({\n    [stateName]: typeof updater === \"function\" ? updater(state[stateName]) : updater\n  }));\n};\nvar createSelectors = (store) => {\n  let selectors = {};\n  for (let k of Object.keys(store.getState())) {\n    selectors[k] = () => store((s) => s[k]);\n  }\n  return selectors;\n};\nvar useStoreValues = (store, keys) => {\n  const result = {};\n  keys.forEach((key) => {\n    result[key] = store.use[key]();\n  });\n  return result;\n};\n\n// src/lib/utils.ts\nvar import_clsx = require(\"clsx\");\nvar import_tailwind_merge = require(\"tailwind-merge\");\nfunction cn(...inputs) {\n  return (0, import_tailwind_merge.twMerge)((0, import_clsx.clsx)(inputs));\n}\n\n// src/helpers/time_helpers.ts\nvar import_firestore2 = require(\"firebase/firestore\");\nvar import_moment_timezone = __toESM(require(\"moment-timezone\"));\nfunction timestamp_to_string(firebaseTimestamp, options) {\n  let date;\n  if (firebaseTimestamp instanceof import_firestore2.Timestamp) {\n    date = firebaseTimestamp.toDate();\n  } else if (firebaseTimestamp instanceof Date) {\n    date = firebaseTimestamp;\n  } else if (typeof firebaseTimestamp === \"string\") {\n    date = import_moment_timezone.default.utc(firebaseTimestamp, options?.fromFormat || \"DD/MM/YYYY HH:mm:ss\").toDate();\n    if (isNaN(date.getTime())) {\n      throw new Error(\"Invalid date string format\");\n    }\n  } else {\n    throw new Error(\"Invalid input: firebaseTimestamp must be a Timestamp, Date, or valid date string.\");\n  }\n  if (options?.tz) {\n    const result = (0, import_moment_timezone.default)(date).tz(options?.tz).format(options?.format || \"DD/MM/YYYY HH:mm:ss\");\n    return result;\n  }\n  return import_moment_timezone.default.utc(date).format(options?.format || \"DD/MM/YYYY HH:mm:ss\");\n}\nfunction timestamp_to_millis(firebaseTimestamp) {\n  const timestamp = new import_firestore2.Timestamp(firebaseTimestamp?.seconds, firebaseTimestamp?.nanoseconds);\n  return timestamp.toMillis();\n}\nfunction sort_by_timestamp(a, b, reverse = false) {\n  return reverse ? timestamp_to_millis(b) - timestamp_to_millis(a) : timestamp_to_millis(a) - timestamp_to_millis(b);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  add_document,\n  addressRegex,\n  auth,\n  calculateBearing,\n  carsRegex,\n  chartsRegex,\n  cleanNxSites,\n  cn,\n  collections,\n  colorRegex,\n  createSelectors,\n  db,\n  delete_document,\n  displayFormatPhoneNumber,\n  emailRegex,\n  extractAlertsData,\n  extractBoardsData,\n  extractCanbusData,\n  extractCarsData,\n  extractClientData,\n  extractLocationData,\n  extractSiteData,\n  fire_base_TIME_TEMP,\n  formatCarNumber,\n  getFormElementValue,\n  getLocationUrl,\n  getUserCountryByIp,\n  get_all_documents,\n  get_document_by_id,\n  handleChange,\n  handleInvalid,\n  handlePaste,\n  initializeUserPermissions,\n  international_israel_phone_format,\n  isInternational,\n  isInternationalIsraelPhone,\n  is_iccid,\n  local_israel_phone_format,\n  multiStringFormat,\n  numbersOnlyRegex,\n  numbersRegex,\n  parseMultiSelectInput,\n  parsePermissions,\n  priceRegex,\n  query_document,\n  query_document_by_conditions,\n  query_documents,\n  query_documents_by_conditions,\n  renderOnce,\n  setState,\n  set_document,\n  simpleExtractData,\n  snapshot,\n  snapshotDocument,\n  sort_by_timestamp,\n  storage,\n  textNumbersRegex,\n  textRegex,\n  timestamp_to_millis,\n  timestamp_to_string,\n  useStoreValues,\n  useValidation,\n  userNameFormat\n});\n"]}