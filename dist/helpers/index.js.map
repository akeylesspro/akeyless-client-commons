{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\helpers\\index.js"],"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__getOwnPropDesc","__toESM","mod","isNodeMode","__esModule","__toCommonJS","value","helpers_exports","calculateBearing","add_document","auth","collections","createSelectors","db","delete_document","displayFormatPhoneNumber","extractAlertsData","extractCanbusData","extractBoardsData","extractCarsData","extractLocationData","extractClientData","extractSiteData","fire_base_TIME_TEMP","formatCarNumber","handleInvalid","get_all_documents","get_document_by_id","handleChange","handlePaste","international_israel_phone_format","isInternational","isInternationalIsraelPhone","local_israel_phone_format","query_documents","query_documents_by_conditions","query_document_by_conditions","setState","query_document","set_document","snapshot","simpleExtractData","useStoreValues","useValidation","module","exports","import_moment","require","import_app","import_auth","import_firestore","car_number","cn","length","import_meta","initApp","isNodeEnv","process","env","auth2","console","firebaseConfig","apiKey","NEXT_PUBLIC_API_KEY","VITE_API_KEY","authDomain","NEXT_PUBLIC_AUTH_DOMAIN","VITE_AUTH_DOMAIN","projectId","NEXT_PUBLIC_PROJECT_ID","VITE_PROJECT_ID","storageBucket","NEXT_PUBLIC_STORAGE_BUCKET","VITE_STORAGE_BUCKET","messagingSenderId","NEXT_PUBLIC_MESSAGING_SENDER_ID","VITE_MESSAGING_SENDER_ID","appId","NEXT_PUBLIC_APP_ID","VITE_APP_ID","app","initializeApp","getAuth","db2","getFirestore","error","clients","collection","sites","users","lastLocations","ermEvents","erm2Events","ruptelaEvents","polygons","polygonCars","canbus","states","app_pro_commands_queue","trips","tripsDetails","audit","nx_settings","settings","translations","nx_cars","boards","protection_types","board_types","charge_capacities","Timestamp","now","doc2","data","timestamp","timestamp_seconds","seconds","timestamp_ui","default","unix","format","docData","id","dateUpdated","Date","updated","nanoseconds","dateCreated","created","dateUploaded","uploaded","carData","icon","gov_info","vehicle_type","brand","manufacturer","carId","newDate","date_ui","latitude","locationData","longitude","spd","prev_latitude","prev_longitude","lat","prev_lat","prev_lng","Number","toFixed","collection_path","snapshot2","documents","getDocs","docs","map","doc_id","doc_ref","doc_snap","doc","getDoc","exists","Error"],"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/helpers/index.ts\nvar helpers_exports = {};\n__export(helpers_exports, {\n  add_document: () => add_document,\n  auth: () => auth,\n  calculateBearing: () => calculateBearing,\n  collections: () => collections,\n  createSelectors: () => createSelectors,\n  db: () => db,\n  delete_document: () => delete_document,\n  displayFormatPhoneNumber: () => displayFormatPhoneNumber,\n  extractAlertsData: () => extractAlertsData,\n  extractBoardsData: () => extractBoardsData,\n  extractCanbusData: () => extractCanbusData,\n  extractCarsData: () => extractCarsData,\n  extractClientData: () => extractClientData,\n  extractLocationData: () => extractLocationData,\n  extractSiteData: () => extractSiteData,\n  fire_base_TIME_TEMP: () => fire_base_TIME_TEMP,\n  formatCarNumber: () => formatCarNumber,\n  get_all_documents: () => get_all_documents,\n  get_document_by_id: () => get_document_by_id,\n  handleChange: () => handleChange,\n  handleInvalid: () => handleInvalid,\n  handlePaste: () => handlePaste,\n  international_israel_phone_format: () => international_israel_phone_format,\n  isInternational: () => isInternational,\n  isInternationalIsraelPhone: () => isInternationalIsraelPhone,\n  local_israel_phone_format: () => local_israel_phone_format,\n  query_document: () => query_document,\n  query_document_by_conditions: () => query_document_by_conditions,\n  query_documents: () => query_documents,\n  query_documents_by_conditions: () => query_documents_by_conditions,\n  setState: () => setState,\n  set_document: () => set_document,\n  simpleExtractData: () => simpleExtractData,\n  snapshot: () => snapshot,\n  useStoreValues: () => useStoreValues,\n  useValidation: () => useValidation\n});\nmodule.exports = __toCommonJS(helpers_exports);\n\n// src/helpers/firebase.ts\nvar import_moment = __toESM(require(\"moment\"));\nvar import_app = require(\"firebase/app\");\nvar import_auth = require(\"firebase/auth\");\nvar import_firestore = require(\"firebase/firestore\");\n\n// src/helpers/cars.ts\nvar formatCarNumber = (car_number) => {\n  var cn = car_number;\n  if (cn?.length == 8) return `${cn[0]}${cn[1]}${cn[2]}-${cn[3]}${cn[4]}-${cn[5]}${cn[6]}${cn[7]}`;\n  if (cn?.length == 7) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}${cn[4]}-${cn[5]}${cn[6]}`;\n  if (cn?.length == 6) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}-${cn[4]}${cn[5]}`;\n  if (cn?.length == 5) return `${cn[0]}-${cn[1]}${cn[2]}-${cn[3]}${cn[4]}`;\n  return cn;\n};\n\n// src/helpers/firebase.ts\nvar import_meta = {};\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import_meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import_meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import_meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import_meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import_meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import_meta.env.VITE_APP_ID\n  };\n  try {\n    const app = (0, import_app.initializeApp)(firebaseConfig);\n    const auth2 = (0, import_auth.getAuth)(app);\n    const db2 = (0, import_firestore.getFirestore)(app);\n    return { db: db2, auth: auth2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth } = initApp();\nvar collections = {\n  clients: (0, import_firestore.collection)(db, \"nx-clients\"),\n  sites: (0, import_firestore.collection)(db, \"nx-sites\"),\n  cars: (0, import_firestore.collection)(db, \"units\"),\n  users: (0, import_firestore.collection)(db, \"nx-users\"),\n  lastLocations: (0, import_firestore.collection)(db, \"last_locations\"),\n  ermEvents: (0, import_firestore.collection)(db, \"erm_events_general\"),\n  erm2Events: (0, import_firestore.collection)(db, \"erm2_events_general\"),\n  ruptelaEvents: (0, import_firestore.collection)(db, \"ruptela_events_general\"),\n  polygons: (0, import_firestore.collection)(db, \"nx-polygons\"),\n  polygonEvents: (0, import_firestore.collection)(db, \"polygon_events\"),\n  polygonCars: (0, import_firestore.collection)(db, \"polygon_cars\"),\n  canbus: (0, import_firestore.collection)(db, \"erm_canbus_parameters\"),\n  states: (0, import_firestore.collection)(db, \"erm_states\"),\n  app_pro_commands_queue: (0, import_firestore.collection)(db, \"app_pro_commands_queue\"),\n  trips: (0, import_firestore.collection)(db, \"erm2_trip\"),\n  tripsDetails: (0, import_firestore.collection)(db, \"erm2_trip_details\"),\n  audit: (0, import_firestore.collection)(db, \"nx-audit\"),\n  nx_settings: (0, import_firestore.collection)(db, \"nx-settings\"),\n  settings: (0, import_firestore.collection)(db, \"settings\"),\n  translations: (0, import_firestore.collection)(db, \"nx-translations\"),\n  nx_cars: (0, import_firestore.collection)(db, \"nx-cars\"),\n  boards: (0, import_firestore.collection)(db, \"boards\"),\n  protection_types: (0, import_firestore.collection)(db, \"protectionTypes\"),\n  board_types: (0, import_firestore.collection)(db, \"boardTypes\"),\n  charge_capacities: (0, import_firestore.collection)(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = import_firestore.Timestamp.now;\nvar extractAlertsData = (doc2) => {\n  const data = doc2.data();\n  const { car_number, timestamp } = data;\n  return {\n    ...data,\n    timestamp_seconds: timestamp.seconds,\n    timestamp_ui: import_moment.default.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\n    car_number: formatCarNumber(car_number)\n  };\n};\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar extractSiteData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"DD.MM.YYYY - HH:mm\")\n  };\n};\nvar extractClientData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"HH:mm  DD/MM/YY\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"HH:mm  DD/MM/YY\")\n  };\n};\nvar extractBoardsData = (doc2) => {\n  const data = doc2.data();\n  const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : import_moment.default.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\n  return {\n    ...data,\n    id: doc2.id,\n    uploaded: dateUploaded\n  };\n};\nvar extractCarsData = (doc2) => {\n  const carData = doc2.data();\n  let icon;\n  const gov_info = carData.gov_info;\n  if (gov_info) {\n    if (carData.icon) {\n      icon = carData.icon;\n    } else if (gov_info.vehicle_type === \"atv\") {\n      icon = \"truck\";\n    } else if (gov_info.vehicle_type === \"motorcycle\") {\n      icon = \"motorcycle\";\n    } else {\n      icon = \"car\";\n    }\n  } else {\n    icon = \"car\";\n  }\n  return {\n    ...carData,\n    id: doc2.id,\n    brand: carData.brand || carData.manufacturer,\n    car_number: carData.carId,\n    icon\n  };\n};\nvar extractCanbusData = (doc2) => {\n  const data = doc2.data();\n  const newDate = new Date(data.timestamp.seconds * 1e3);\n  return {\n    ...data,\n    date_ui: (0, import_moment.default)(newDate).format(\"DD/MM/YYYY - HH:mm\")\n  };\n};\nvar extractLocationData = (doc2) => {\n  const locationData = doc2.data();\n  const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\n  return {\n    ...locationData,\n    id: doc2.id,\n    lat: latitude,\n    lng: longitude,\n    prev_lat: prev_latitude,\n    prev_lng: prev_longitude,\n    timestamp: timestamp?.seconds,\n    spd: Number(spd).toFixed(0)\n  };\n};\nvar get_all_documents = async (collection_path) => {\n  try {\n    const snapshot2 = await (0, import_firestore.getDocs)((0, import_firestore.collection)(db, collection_path));\n    const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    return [];\n  }\n};\nvar get_document_by_id = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    const doc_snap = await (0, import_firestore.getDoc)(doc_ref);\n    if (!doc_snap.exists()) {\n      throw new Error(\"Document not found, document id: \" + doc_id);\n    }\n    return simpleExtractData(doc_snap);\n  } catch (error) {\n    console.error(\"Error from get_document_by_id\", error);\n    return null;\n  }\n};\nvar set_document = async (collection_path, doc_id, data) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.setDoc)(doc_ref, data, { merge: true });\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\n    return false;\n  }\n};\nvar add_document = async (collection_path, data, include_id = false) => {\n  try {\n    const col_ref = (0, import_firestore.collection)(db, collection_path);\n    const doc_ref = await (0, import_firestore.addDoc)(col_ref, data);\n    if (include_id) {\n      await (0, import_firestore.setDoc)(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document in collection: ${collection_path}`, error);\n    return false;\n  }\n};\nvar delete_document = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.deleteDoc)(doc_ref);\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\n    return false;\n  }\n};\nvar query_document = async (collection_path, field_name, operator, value, ignore_log = false) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (documents.length < 1) {\n      throw new Error(\n        `No data to return from: \ncollection: ${collection_path}, \nfield_name: ${field_name}, \noperator: ${operator}, \nvalue: ${value}`\n      );\n    }\n    return documents[0];\n  } catch (error) {\n    if (!ignore_log) {\n      console.error(\"Error querying document:\", error);\n    }\n    return null;\n  }\n};\nvar query_documents = async (collection_path, field_name, operator, value) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\n    return [];\n  }\n};\nvar query_documents_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return [];\n  }\n};\nvar query_document_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (!documents[0]) {\n      throw new Error(\"No data returned from DB\");\n    }\n    return documents[0];\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return null;\n  }\n};\nvar snapshot = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  const promise = new Promise((resolve) => {\n    console.log(`==> ${config.collectionName} subscribed.`);\n    resolvePromise = resolve;\n  });\n  const collectionRef = (0, import_firestore.collection)(db, config.collectionName);\n  const subscribe = (0, import_firestore.onSnapshot)(\n    collectionRef,\n    (snapshot2) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n        config.onFirstTime?.(documents, config);\n        config.extraParsers?.forEach((extraParser) => {\n          extraParser.onFirstTime?.(documents, config);\n        });\n        resolvePromise();\n      } else {\n        const addedDocs = [];\n        const modifiedDocs = [];\n        const removedDocs = [];\n        snapshot2.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            addedDocs.push(simpleExtractData(change.doc));\n          }\n          if (change.type === \"modified\") {\n            modifiedDocs.push(simpleExtractData(change.doc));\n          }\n          if (change.type === \"removed\") {\n            removedDocs.push(simpleExtractData(change.doc));\n          }\n        });\n        addedDocs.length && config.onAdd?.(addedDocs, config);\n        modifiedDocs.length && config.onModify?.(modifiedDocs, config);\n        removedDocs.length && config.onRemove?.(removedDocs, config);\n        config.extraParsers?.forEach((extraParser) => {\n          addedDocs.length && extraParser.onAdd?.(addedDocs, config);\n          modifiedDocs.length && extraParser.onModify?.(modifiedDocs, config);\n          removedDocs.length && extraParser.onRemove?.(removedDocs, config);\n        });\n      }\n    },\n    (error) => {\n      console.error(`Error listening to collection: ${config.collectionName}`, error);\n      resolvePromise();\n    }\n  );\n  const unsubscribe = () => {\n    subscribe();\n    console.log(`==> ${config.collectionName} unsubscribed.`);\n  };\n  return { promise, unsubscribe };\n};\n\n// src/helpers/global.ts\nvar calculateBearing = (startLat, startLng, endLat, endLng) => {\n  if (startLat === endLat || startLng === endLng) {\n    return 0;\n  }\n  if (startLat === void 0 || startLng === void 0 || endLat === void 0 || endLng === void 0) {\n    return 0;\n  }\n  const startLatRad = startLat * Math.PI / 180;\n  const startLngRad = startLng * Math.PI / 180;\n  const endLatRad = endLat * Math.PI / 180;\n  const endLngRad = endLng * Math.PI / 180;\n  const dLon = endLngRad - startLngRad;\n  const y = Math.sin(dLon) * Math.cos(endLatRad);\n  const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\n  const bearing = Math.atan2(y, x) * 180 / Math.PI;\n  return (bearing + 360) % 360;\n};\n\n// src/helpers/forms.ts\nvar handleInvalid = (e, requireError) => {\n  e.target.setCustomValidity(requireError || \"This filed is required !\");\n};\nvar handleChange = (e) => {\n  e.target.setCustomValidity(\"\");\n  const validation = e.target.getAttribute(\"data-validation\");\n  if (validation === \"text\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbers\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbersOnly\") {\n    const cleanedValue = e.target.value.replace(/[^0-9]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"price\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\.]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"textNumbers\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"email\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"color\") {\n    const cleanedValue = e.target.value.replace(/[^#0-9A-Fa-f]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"address\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"cars\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"charts\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else {\n    e.target.value = e.target.value;\n  }\n};\nvar handlePaste = (e) => {\n  const validation = e.currentTarget.getAttribute(\"data-validation\");\n  let pasteData = e.clipboardData.getData(\"text\");\n  if (validation === \"text\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n  } else if (validation === \"numbers\") {\n    pasteData = pasteData.replace(/[^0-9\\- +]/g, \"\");\n  } else if (validation === \"numbersOnly\") {\n    pasteData = pasteData.replace(/[^0-9]/g, \"\");\n  } else if (validation === \"price\") {\n    pasteData = pasteData.replace(/[^0-9\\.]/g, \"\");\n  } else if (validation === \"textNumbers\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n  } else if (validation === \"email\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n  } else if (validation === \"color\") {\n    pasteData = pasteData.replace(/[^#0-9A-Fa-f]/g, \"\");\n  } else if (validation === \"address\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n  } else if (validation === \"cars\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n  } else if (validation === \"charts\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n  }\n  e.preventDefault();\n  document.execCommand(\"insertText\", false, pasteData);\n};\nvar useValidation = (validationType, requireError) => {\n  return {\n    onChange: handleChange,\n    onPaste: handlePaste,\n    onInvalid: (e) => handleInvalid(e, requireError),\n    \"data-validation\": validationType\n  };\n};\n\n// src/helpers/store.ts\nvar setState = (updater, set, stateName) => {\n  return set((state) => ({\n    [stateName]: typeof updater === \"function\" ? updater(state[stateName]) : updater\n  }));\n};\nvar createSelectors = (store) => {\n  let selectors = {};\n  for (let k of Object.keys(store.getState())) {\n    selectors[k] = () => store((s) => s[k]);\n  }\n  return selectors;\n};\nvar useStoreValues = (store, keys) => {\n  const result = {};\n  keys.forEach((key) => {\n    result[key] = store.use[key]();\n  });\n  return result;\n};\n\n// src/helpers/phoneNumber.ts\nvar import_libphonenumber_js = require(\"libphonenumber-js\");\nvar isInternational = (phone_number) => {\n  return phone_number.startsWith(\"+\");\n};\nvar isInternationalIsraelPhone = (phone_number) => {\n  return phone_number.startsWith(\"+9725\");\n};\nvar local_israel_phone_format = (international_number) => {\n  return international_number.replace(\"+972\", \"0\");\n};\nvar international_israel_phone_format = (phone) => {\n  const validNumber = phone.slice(1, phone.length);\n  return \"+972\".concat(validNumber);\n};\nvar displayFormatPhoneNumber = (phoneNumber) => {\n  if (isInternational(phoneNumber)) {\n    const phoneNumberObject = (0, import_libphonenumber_js.parsePhoneNumberFromString)(phoneNumber);\n    if (!phoneNumberObject) {\n      return phoneNumber;\n    }\n    return phoneNumberObject.formatInternational().replace(/\\s/g, \"-\");\n  }\n  return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  add_document,\n  auth,\n  calculateBearing,\n  collections,\n  createSelectors,\n  db,\n  delete_document,\n  displayFormatPhoneNumber,\n  extractAlertsData,\n  extractBoardsData,\n  extractCanbusData,\n  extractCarsData,\n  extractClientData,\n  extractLocationData,\n  extractSiteData,\n  fire_base_TIME_TEMP,\n  formatCarNumber,\n  get_all_documents,\n  get_document_by_id,\n  handleChange,\n  handleInvalid,\n  handlePaste,\n  international_israel_phone_format,\n  isInternational,\n  isInternationalIsraelPhone,\n  local_israel_phone_format,\n  query_document,\n  query_document_by_conditions,\n  query_documents,\n  query_documents_by_conditions,\n  setState,\n  set_document,\n  simpleExtractData,\n  snapshot,\n  useStoreValues,\n  useValidation\n});\n"]}