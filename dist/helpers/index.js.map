{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\helpers\\index.js"],"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__getOwnPropDesc","__toESM","mod","isNodeMode","__esModule","__toCommonJS","value","helpers_exports","calculateBearing","add_document","auth","collections"],"mappings":"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/helpers/index.ts\nvar helpers_exports = {};\n__export(helpers_exports, {\n  add_document: () => add_document,\n  auth: () => auth,\n  calculateBearing: () => calculateBearing,\n  collections: () => collections,\n  createSelectors: () => createSelectors,\n  db: () => db,\n  delete_document: () => delete_document,\n  displayFormatPhoneNumber: () => displayFormatPhoneNumber,\n  extractAlertsData: () => extractAlertsData,\n  extractBoardsData: () => extractBoardsData,\n  extractCanbusData: () => extractCanbusData,\n  extractCarsData: () => extractCarsData,\n  extractClientData: () => extractClientData,\n  extractLocationData: () => extractLocationData,\n  extractSiteData: () => extractSiteData,\n  fire_base_TIME_TEMP: () => fire_base_TIME_TEMP,\n  formatCarNumber: () => formatCarNumber,\n  get_all_documents: () => get_all_documents,\n  get_document_by_id: () => get_document_by_id,\n  handleChange: () => handleChange,\n  handleInvalid: () => handleInvalid,\n  handlePaste: () => handlePaste,\n  international_israel_phone_format: () => international_israel_phone_format,\n  isInternational: () => isInternational,\n  isInternationalIsraelPhone: () => isInternationalIsraelPhone,\n  local_israel_phone_format: () => local_israel_phone_format,\n  query_document: () => query_document,\n  query_document_by_conditions: () => query_document_by_conditions,\n  query_documents: () => query_documents,\n  query_documents_by_conditions: () => query_documents_by_conditions,\n  setState: () => setState,\n  set_document: () => set_document,\n  simpleExtractData: () => simpleExtractData,\n  snapshot: () => snapshot,\n  useStoreValues: () => useStoreValues,\n  useValidation: () => useValidation\n});\nmodule.exports = __toCommonJS(helpers_exports);\n\n// src/helpers/firebase.ts\nvar import_moment = __toESM(require(\"moment\"));\nvar import_app = require(\"firebase/app\");\nvar import_auth = require(\"firebase/auth\");\nvar import_firestore = require(\"firebase/firestore\");\n\n// src/helpers/cars.ts\nvar formatCarNumber = (car_number) => {\n  var cn = car_number;\n  if (cn?.length == 8) return `${cn[0]}${cn[1]}${cn[2]}-${cn[3]}${cn[4]}-${cn[5]}${cn[6]}${cn[7]}`;\n  if (cn?.length == 7) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}${cn[4]}-${cn[5]}${cn[6]}`;\n  if (cn?.length == 6) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}-${cn[4]}${cn[5]}`;\n  if (cn?.length == 5) return `${cn[0]}-${cn[1]}${cn[2]}-${cn[3]}${cn[4]}`;\n  return cn;\n};\n\n// src/helpers/firebase.ts\nvar import_meta = {};\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import_meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import_meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import_meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import_meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import_meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import_meta.env.VITE_APP_ID\n  };\n  try {\n    const app = (0, import_app.initializeApp)(firebaseConfig);\n    const auth2 = (0, import_auth.getAuth)(app);\n    const db2 = (0, import_firestore.getFirestore)(app);\n    return { db: db2, auth: auth2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth } = initApp();\nvar collections = {\n  clients: (0, import_firestore.collection)(db, \"nx-clients\"),\n  sites: (0, import_firestore.collection)(db, \"nx-sites\"),\n  cars: (0, import_firestore.collection)(db, \"units\"),\n  users: (0, import_firestore.collection)(db, \"nx-users\"),\n  lastLocations: (0, import_firestore.collection)(db, \"last_locations\"),\n  ermEvents: (0, import_firestore.collection)(db, \"erm_events_general\"),\n  erm2Events: (0, import_firestore.collection)(db, \"erm2_events_general\"),\n  ruptelaEvents: (0, import_firestore.collection)(db, \"ruptela_events_general\"),\n  polygons: (0, import_firestore.collection)(db, \"nx-polygons\"),\n  polygonEvents: (0, import_firestore.collection)(db, \"polygon_events\"),\n  polygonCars: (0, import_firestore.collection)(db, \"polygon_cars\"),\n  canbus: (0, import_firestore.collection)(db, \"erm_canbus_parameters\"),\n  states: (0, import_firestore.collection)(db, \"erm_states\"),\n  app_pro_commands_queue: (0, import_firestore.collection)(db, \"app_pro_commands_queue\"),\n  trips: (0, import_firestore.collection)(db, \"erm2_trip\"),\n  tripsDetails: (0, import_firestore.collection)(db, \"erm2_trip_details\"),\n  audit: (0, import_firestore.collection)(db, \"nx-audit\"),\n  nx_settings: (0, import_firestore.collection)(db, \"nx-settings\"),\n  settings: (0, import_firestore.collection)(db, \"settings\"),\n  translations: (0, import_firestore.collection)(db, \"nx-translations\"),\n  nx_cars: (0, import_firestore.collection)(db, \"nx-cars\"),\n  boards: (0, import_firestore.collection)(db, \"boards\"),\n  protection_types: (0, import_firestore.collection)(db, \"protectionTypes\"),\n  board_types: (0, import_firestore.collection)(db, \"boardTypes\"),\n  charge_capacities: (0, import_firestore.collection)(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = import_firestore.Timestamp.now;\nvar extractAlertsData = (doc2) => {\n  const data = doc2.data();\n  const { car_number, timestamp } = data;\n  return {\n    ...data,\n    timestamp_seconds: timestamp.seconds,\n    timestamp_ui: import_moment.default.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\n    car_number: formatCarNumber(car_number)\n  };\n};\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar extractSiteData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"DD.MM.YYYY - HH:mm\")\n  };\n};\nvar extractClientData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"HH:mm  DD/MM/YY\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"HH:mm  DD/MM/YY\")\n  };\n};\nvar extractBoardsData = (doc2) => {\n  const data = doc2.data();\n  const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : import_moment.default.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\n  return {\n    ...data,\n    id: doc2.id,\n    uploaded: dateUploaded\n  };\n};\nvar extractCarsData = (doc2) => {\n  const carData = doc2.data();\n  let icon;\n  const gov_info = carData.gov_info;\n  if (gov_info) {\n    if (carData.icon) {\n      icon = carData.icon;\n    } else if (gov_info.vehicle_type === \"atv\") {\n      icon = \"truck\";\n    } else if (gov_info.vehicle_type === \"motorcycle\") {\n      icon = \"motorcycle\";\n    } else {\n      icon = \"car\";\n    }\n  } else {\n    icon = \"car\";\n  }\n  return {\n    ...carData,\n    id: doc2.id,\n    brand: carData.brand || carData.manufacturer,\n    car_number: carData.carId,\n    icon\n  };\n};\nvar extractCanbusData = (doc2) => {\n  const data = doc2.data();\n  const newDate = new Date(data.timestamp.seconds * 1e3);\n  return {\n    ...data,\n    date_ui: (0, import_moment.default)(newDate).format(\"DD/MM/YYYY - HH:mm\")\n  };\n};\nvar extractLocationData = (doc2) => {\n  const locationData = doc2.data();\n  const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\n  return {\n    ...locationData,\n    id: doc2.id,\n    lat: latitude,\n    lng: longitude,\n    prev_lat: prev_latitude,\n    prev_lng: prev_longitude,\n    timestamp: timestamp?.seconds,\n    spd: Number(spd).toFixed(0)\n  };\n};\nvar get_all_documents = async (collection_path) => {\n  try {\n    const snapshot2 = await (0, import_firestore.getDocs)((0, import_firestore.collection)(db, collection_path));\n    const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    return [];\n  }\n};\nvar get_document_by_id = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    const doc_snap = await (0, import_firestore.getDoc)(doc_ref);\n    if (!doc_snap.exists()) {\n      throw new Error(\"Document not found, document id: \" + doc_id);\n    }\n    return simpleExtractData(doc_snap);\n  } catch (error) {\n    console.error(\"Error from get_document_by_id\", error);\n    return null;\n  }\n};\nvar set_document = async (collection_path, doc_id, data) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.setDoc)(doc_ref, data, { merge: true });\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\n    return false;\n  }\n};\nvar add_document = async (collection_path, data, include_id = false) => {\n  try {\n    const col_ref = (0, import_firestore.collection)(db, collection_path);\n    const doc_ref = await (0, import_firestore.addDoc)(col_ref, data);\n    if (include_id) {\n      await (0, import_firestore.setDoc)(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document in collection: ${collection_path}`, error);\n    return false;\n  }\n};\nvar delete_document = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.deleteDoc)(doc_ref);\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\n    return false;\n  }\n};\nvar query_document = async (collection_path, field_name, operator, value, ignore_log = false) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (documents.length < 1) {\n      throw new Error(\n        `No data to return from: \ncollection: ${collection_path}, \nfield_name: ${field_name}, \noperator: ${operator}, \nvalue: ${value}`\n      );\n    }\n    return documents[0];\n  } catch (error) {\n    if (!ignore_log) {\n      console.error(\"Error querying document:\", error);\n    }\n    return null;\n  }\n};\nvar query_documents = async (collection_path, field_name, operator, value) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\n    return [];\n  }\n};\nvar query_documents_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return [];\n  }\n};\nvar query_document_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (!documents[0]) {\n      throw new Error(\"No data returned from DB\");\n    }\n    return documents[0];\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return null;\n  }\n};\nvar snapshot = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  const promise = new Promise((resolve) => {\n    console.log(`==> ${config.collectionName} subscribed.`);\n    resolvePromise = resolve;\n  });\n  const collectionRef = (0, import_firestore.collection)(db, config.collectionName);\n  const subscribe = (0, import_firestore.onSnapshot)(\n    collectionRef,\n    (snapshot2) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n        config.onFirstTime?.(documents, config);\n        config.extraParsers?.forEach((extraParser) => {\n          extraParser.onFirstTime?.(documents, config);\n        });\n        resolvePromise();\n      } else {\n        const addedDocs = [];\n        const modifiedDocs = [];\n        const removedDocs = [];\n        snapshot2.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            addedDocs.push(simpleExtractData(change.doc));\n          }\n          if (change.type === \"modified\") {\n            modifiedDocs.push(simpleExtractData(change.doc));\n          }\n          if (change.type === \"removed\") {\n            removedDocs.push(simpleExtractData(change.doc));\n          }\n        });\n        addedDocs.length && config.onAdd?.(addedDocs, config);\n        modifiedDocs.length && config.onModify?.(modifiedDocs, config);\n        removedDocs.length && config.onRemove?.(removedDocs, config);\n        config.extraParsers?.forEach((extraParser) => {\n          addedDocs.length && extraParser.onAdd?.(addedDocs, config);\n          modifiedDocs.length && extraParser.onModify?.(modifiedDocs, config);\n          removedDocs.length && extraParser.onRemove?.(removedDocs, config);\n        });\n      }\n    },\n    (error) => {\n      console.error(`Error listening to collection: ${config.collectionName}`, error);\n      resolvePromise();\n    }\n  );\n  const unsubscribe = () => {\n    subscribe();\n    console.log(`==> ${config.collectionName} unsubscribed.`);\n  };\n  return { promise, unsubscribe };\n};\n\n// src/helpers/global.ts\nvar calculateBearing = (startLat, startLng, endLat, endLng) => {\n  if (startLat === endLat || startLng === endLng) {\n    return 0;\n  }\n  if (startLat === void 0 || startLng === void 0 || endLat === void 0 || endLng === void 0) {\n    return 0;\n  }\n  const startLatRad = startLat * Math.PI / 180;\n  const startLngRad = startLng * Math.PI / 180;\n  const endLatRad = endLat * Math.PI / 180;\n  const endLngRad = endLng * Math.PI / 180;\n  const dLon = endLngRad - startLngRad;\n  const y = Math.sin(dLon) * Math.cos(endLatRad);\n  const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\n  const bearing = Math.atan2(y, x) * 180 / Math.PI;\n  return (bearing + 360) % 360;\n};\n\n// src/helpers/forms.ts\nvar handleInvalid = (e, requireError) => {\n  e.target.setCustomValidity(requireError || \"This filed is required !\");\n};\nvar handleChange = (e) => {\n  e.target.setCustomValidity(\"\");\n  const validation = e.target.getAttribute(\"data-validation\");\n  if (validation === \"text\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbers\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbersOnly\") {\n    const cleanedValue = e.target.value.replace(/[^0-9]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"price\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\.]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"textNumbers\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"email\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"color\") {\n    const cleanedValue = e.target.value.replace(/[^#0-9A-Fa-f]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"address\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"cars\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"charts\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else {\n    e.target.value = e.target.value;\n  }\n};\nvar handlePaste = (e) => {\n  const validation = e.currentTarget.getAttribute(\"data-validation\");\n  let pasteData = e.clipboardData.getData(\"text\");\n  if (validation === \"text\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n  } else if (validation === \"numbers\") {\n    pasteData = pasteData.replace(/[^0-9\\- +]/g, \"\");\n  } else if (validation === \"numbersOnly\") {\n    pasteData = pasteData.replace(/[^0-9]/g, \"\");\n  } else if (validation === \"price\") {\n    pasteData = pasteData.replace(/[^0-9\\.]/g, \"\");\n  } else if (validation === \"textNumbers\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n  } else if (validation === \"email\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n  } else if (validation === \"color\") {\n    pasteData = pasteData.replace(/[^#0-9A-Fa-f]/g, \"\");\n  } else if (validation === \"address\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n  } else if (validation === \"cars\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n  } else if (validation === \"charts\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n  }\n  e.preventDefault();\n  document.execCommand(\"insertText\", false, pasteData);\n};\nvar useValidation = (validationType, requireError) => {\n  return {\n    onChange: handleChange,\n    onPaste: handlePaste,\n    onInvalid: (e) => handleInvalid(e, requireError),\n    \"data-validation\": validationType\n  };\n};\n\n// src/helpers/store.ts\nvar setState = (updater, set, stateName) => {\n  return set((state) => ({\n    [stateName]: typeof updater === \"function\" ? updater(state[stateName]) : updater\n  }));\n};\nvar createSelectors = (store) => {\n  let selectors = {};\n  for (let k of Object.keys(store.getState())) {\n    selectors[k] = () => store((s) => s[k]);\n  }\n  return selectors;\n};\nvar useStoreValues = (store, keys) => {\n  const result = {};\n  keys.forEach((key) => {\n    result[key] = store.use[key]();\n  });\n  return result;\n};\n\n// src/helpers/phoneNumber.ts\nvar import_libphonenumber_js = require(\"libphonenumber-js\");\nvar isInternational = (phone_number) => {\n  return phone_number.startsWith(\"+\");\n};\nvar isInternationalIsraelPhone = (phone_number) => {\n  return phone_number.startsWith(\"+9725\");\n};\nvar local_israel_phone_format = (international_number) => {\n  return international_number.replace(\"+972\", \"0\");\n};\nvar international_israel_phone_format = (phone) => {\n  const validNumber = phone.slice(1, phone.length);\n  return \"+972\".concat(validNumber);\n};\nvar displayFormatPhoneNumber = (phoneNumber) => {\n  if (isInternational(phoneNumber)) {\n    const phoneNumberObject = (0, import_libphonenumber_js.parsePhoneNumberFromString)(phoneNumber);\n    if (!phoneNumberObject) {\n      return phoneNumber;\n    }\n    return phoneNumberObject.formatInternational().replace(/\\s/g, \"-\");\n  }\n  return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  add_document,\n  auth,\n  calculateBearing,\n  collections,\n  createSelectors,\n  db,\n  delete_document,\n  displayFormatPhoneNumber,\n  extractAlertsData,\n  extractBoardsData,\n  extractCanbusData,\n  extractCarsData,\n  extractClientData,\n  extractLocationData,\n  extractSiteData,\n  fire_base_TIME_TEMP,\n  formatCarNumber,\n  get_all_documents,\n  get_document_by_id,\n  handleChange,\n  handleInvalid,\n  handlePaste,\n  international_israel_phone_format,\n  isInternational,\n  isInternationalIsraelPhone,\n  local_israel_phone_format,\n  query_document,\n  query_document_by_conditions,\n  query_documents,\n  query_documents_by_conditions,\n  setState,\n  set_document,\n  simpleExtractData,\n  snapshot,\n  useStoreValues,\n  useValidation\n});\n"]}