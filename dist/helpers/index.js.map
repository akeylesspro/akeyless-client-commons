{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\helpers\\index.js"],"names":["__create","Object","create","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","__defProp","get","enumerable","__copyProps","to","from","except","desc","key","call","__toESM","mod","isNodeMode","value","__toCommonJS","add_document","calculateBearing","auth","collections","helpers_exports","createSelectors","db","delete_document","displayFormatPhoneNumber","extractAlertsData","extractBoardsData","extractCanbusData","extractCarsData","extractClientData","extractLocationData","extractSiteData","formatCarNumber","fire_base_TIME_TEMP","get_all_documents","get_document_by_id","handleChange","handleInvalid","handlePaste","international_israel_phone_format","isInternational","isInternationalIsraelPhone","local_israel_phone_format","query_document","query_documents","query_document_by_conditions","query_documents_by_conditions","setState","set_document","simpleExtractData","useValidation","useStoreValues","import_app","require","import_auth","import_firestore","car_number","cn","length","import_meta","initApp","isNodeEnv","process","env","firebaseConfig","apiKey","NEXT_PUBLIC_API_KEY","VITE_API_KEY","projectId","NEXT_PUBLIC_PROJECT_ID","VITE_PROJECT_ID","storageBucket","NEXT_PUBLIC_STORAGE_BUCKET","VITE_STORAGE_BUCKET","messagingSenderId","NEXT_PUBLIC_MESSAGING_SENDER_ID","VITE_MESSAGING_SENDER_ID","appId","NEXT_PUBLIC_APP_ID","VITE_APP_ID","app","initializeApp","auth2","getAuth","db2","getFirestore","error","console","clients","collection","sites","cars","users","lastLocations","ermEvents","erm2Events","ruptelaEvents","polygons","polygonEvents","polygonCars","canbus","states","app_pro_commands_queue","trips","tripsDetails","audit","nx_settings","settings","translations","nx_cars","boards","protection_types","board_types","charge_capacities","Timestamp","now","doc2","data","timestamp","timestamp_seconds","seconds","timestamp_ui","import_moment","default","unix","format","docData","id","dateUpdated","Date","updated","nanoseconds","dateCreated","created","dateUploaded","uploaded","icon","gov_info","carData","vehicle_type","brand","manufacturer","carId","newDate","date_ui","locationData","latitude","longitude","spd","prev_latitude","prev_longitude","lat","lng","prev_lat","prev_lng","Number","toFixed","collection_path","snapshot","documents","getDocs","docs","map"],"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/helpers/index.ts\nvar helpers_exports = {};\n__export(helpers_exports, {\n  add_document: () => add_document,\n  auth: () => auth,\n  calculateBearing: () => calculateBearing,\n  collections: () => collections,\n  createSelectors: () => createSelectors,\n  db: () => db,\n  delete_document: () => delete_document,\n  displayFormatPhoneNumber: () => displayFormatPhoneNumber,\n  extractAlertsData: () => extractAlertsData,\n  extractBoardsData: () => extractBoardsData,\n  extractCanbusData: () => extractCanbusData,\n  extractCarsData: () => extractCarsData,\n  extractClientData: () => extractClientData,\n  extractLocationData: () => extractLocationData,\n  extractSiteData: () => extractSiteData,\n  fire_base_TIME_TEMP: () => fire_base_TIME_TEMP,\n  formatCarNumber: () => formatCarNumber,\n  get_all_documents: () => get_all_documents,\n  get_document_by_id: () => get_document_by_id,\n  handleChange: () => handleChange,\n  handleInvalid: () => handleInvalid,\n  handlePaste: () => handlePaste,\n  international_israel_phone_format: () => international_israel_phone_format,\n  isInternational: () => isInternational,\n  isInternationalIsraelPhone: () => isInternationalIsraelPhone,\n  local_israel_phone_format: () => local_israel_phone_format,\n  query_document: () => query_document,\n  query_document_by_conditions: () => query_document_by_conditions,\n  query_documents: () => query_documents,\n  query_documents_by_conditions: () => query_documents_by_conditions,\n  setState: () => setState,\n  set_document: () => set_document,\n  simpleExtractData: () => simpleExtractData,\n  useStoreValues: () => useStoreValues,\n  useValidation: () => useValidation\n});\nmodule.exports = __toCommonJS(helpers_exports);\n\n// src/helpers/firebase.ts\nvar import_moment = __toESM(require(\"moment\"));\nvar import_app = require(\"firebase/app\");\nvar import_auth = require(\"firebase/auth\");\nvar import_firestore = require(\"firebase/firestore\");\n\n// src/helpers/cars.ts\nvar formatCarNumber = (car_number) => {\n  var cn = car_number;\n  if (cn?.length == 8) return `${cn[0]}${cn[1]}${cn[2]}-${cn[3]}${cn[4]}-${cn[5]}${cn[6]}${cn[7]}`;\n  if (cn?.length == 7) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}${cn[4]}-${cn[5]}${cn[6]}`;\n  if (cn?.length == 6) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}-${cn[4]}${cn[5]}`;\n  if (cn?.length == 5) return `${cn[0]}-${cn[1]}${cn[2]}-${cn[3]}${cn[4]}`;\n  return cn;\n};\n\n// src/helpers/firebase.ts\nvar import_meta = {};\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import_meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import_meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import_meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import_meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import_meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import_meta.env.VITE_APP_ID\n  };\n  try {\n    const app = (0, import_app.initializeApp)(firebaseConfig);\n    const auth2 = (0, import_auth.getAuth)(app);\n    const db2 = (0, import_firestore.getFirestore)(app);\n    return { db: db2, auth: auth2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth } = initApp();\nvar collections = {\n  clients: (0, import_firestore.collection)(db, \"nx-clients\"),\n  sites: (0, import_firestore.collection)(db, \"nx-sites\"),\n  cars: (0, import_firestore.collection)(db, \"units\"),\n  users: (0, import_firestore.collection)(db, \"nx-users\"),\n  lastLocations: (0, import_firestore.collection)(db, \"last_locations\"),\n  ermEvents: (0, import_firestore.collection)(db, \"erm_events_general\"),\n  erm2Events: (0, import_firestore.collection)(db, \"erm2_events_general\"),\n  ruptelaEvents: (0, import_firestore.collection)(db, \"ruptela_events_general\"),\n  polygons: (0, import_firestore.collection)(db, \"nx-polygons\"),\n  polygonEvents: (0, import_firestore.collection)(db, \"polygon_events\"),\n  polygonCars: (0, import_firestore.collection)(db, \"polygon_cars\"),\n  canbus: (0, import_firestore.collection)(db, \"erm_canbus_parameters\"),\n  states: (0, import_firestore.collection)(db, \"erm_states\"),\n  app_pro_commands_queue: (0, import_firestore.collection)(db, \"app_pro_commands_queue\"),\n  trips: (0, import_firestore.collection)(db, \"erm2_trip\"),\n  tripsDetails: (0, import_firestore.collection)(db, \"erm2_trip_details\"),\n  audit: (0, import_firestore.collection)(db, \"nx-audit\"),\n  nx_settings: (0, import_firestore.collection)(db, \"nx-settings\"),\n  settings: (0, import_firestore.collection)(db, \"settings\"),\n  translations: (0, import_firestore.collection)(db, \"nx-translations\"),\n  nx_cars: (0, import_firestore.collection)(db, \"nx-cars\"),\n  boards: (0, import_firestore.collection)(db, \"boards\"),\n  protection_types: (0, import_firestore.collection)(db, \"protectionTypes\"),\n  board_types: (0, import_firestore.collection)(db, \"boardTypes\"),\n  charge_capacities: (0, import_firestore.collection)(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = import_firestore.Timestamp.now;\nvar extractAlertsData = (doc2) => {\n  const data = doc2.data();\n  const { car_number, timestamp } = data;\n  return {\n    ...data,\n    timestamp_seconds: timestamp.seconds,\n    timestamp_ui: import_moment.default.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\n    car_number: formatCarNumber(car_number)\n  };\n};\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar extractSiteData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"DD.MM.YYYY - HH:mm\")\n  };\n};\nvar extractClientData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"HH:mm  DD/MM/YY\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"HH:mm  DD/MM/YY\")\n  };\n};\nvar extractBoardsData = (doc2) => {\n  const data = doc2.data();\n  const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : import_moment.default.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\n  return {\n    ...data,\n    id: doc2.id,\n    uploaded: dateUploaded\n  };\n};\nvar extractCarsData = (doc2) => {\n  const carData = doc2.data();\n  let icon;\n  const gov_info = carData.gov_info;\n  if (gov_info) {\n    if (carData.icon) {\n      icon = carData.icon;\n    } else if (gov_info.vehicle_type === \"atv\") {\n      icon = \"truck\";\n    } else if (gov_info.vehicle_type === \"motorcycle\") {\n      icon = \"motorcycle\";\n    } else {\n      icon = \"car\";\n    }\n  } else {\n    icon = \"car\";\n  }\n  return {\n    ...carData,\n    id: doc2.id,\n    brand: carData.brand || carData.manufacturer,\n    car_number: carData.carId,\n    icon\n  };\n};\nvar extractCanbusData = (doc2) => {\n  const data = doc2.data();\n  const newDate = new Date(data.timestamp.seconds * 1e3);\n  return {\n    ...data,\n    date_ui: (0, import_moment.default)(newDate).format(\"DD/MM/YYYY - HH:mm\")\n  };\n};\nvar extractLocationData = (doc2) => {\n  const locationData = doc2.data();\n  const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\n  return {\n    ...locationData,\n    id: doc2.id,\n    lat: latitude,\n    lng: longitude,\n    prev_lat: prev_latitude,\n    prev_lng: prev_longitude,\n    timestamp: timestamp?.seconds,\n    spd: Number(spd).toFixed(0)\n  };\n};\nvar get_all_documents = async (collection_path) => {\n  try {\n    const snapshot = await (0, import_firestore.getDocs)((0, import_firestore.collection)(db, collection_path));\n    const documents = snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    return [];\n  }\n};\nvar get_document_by_id = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    const doc_snap = await (0, import_firestore.getDoc)(doc_ref);\n    if (!doc_snap.exists()) {\n      throw new Error(\"Document not found, document id: \" + doc_id);\n    }\n    return simpleExtractData(doc_snap);\n  } catch (error) {\n    console.error(\"Error from get_document_by_id\", error);\n    return null;\n  }\n};\nvar set_document = async (collection_path, doc_id, data) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.setDoc)(doc_ref, data, { merge: true });\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\n    return false;\n  }\n};\nvar add_document = async (collection_path, data, include_id = false) => {\n  try {\n    const col_ref = (0, import_firestore.collection)(db, collection_path);\n    const doc_ref = await (0, import_firestore.addDoc)(col_ref, data);\n    if (include_id) {\n      await (0, import_firestore.setDoc)(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document in collection: ${collection_path}`, error);\n    return false;\n  }\n};\nvar delete_document = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.deleteDoc)(doc_ref);\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\n    return false;\n  }\n};\nvar query_document = async (collection_path, field_name, operator, value, ignore_log = false) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (documents.length < 1) {\n      throw new Error(\n        `No data to return from: \ncollection: ${collection_path}, \nfield_name: ${field_name}, \noperator: ${operator}, \nvalue: ${value}`\n      );\n    }\n    return documents[0];\n  } catch (error) {\n    if (!ignore_log) {\n      console.error(\"Error querying document:\", error);\n    }\n    return null;\n  }\n};\nvar query_documents = async (collection_path, field_name, operator, value) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\n    return [];\n  }\n};\nvar query_documents_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return [];\n  }\n};\nvar query_document_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (!documents[0]) {\n      throw new Error(\"No data returned from DB\");\n    }\n    return documents[0];\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return null;\n  }\n};\n\n// src/helpers/global.ts\nvar calculateBearing = (startLat, startLng, endLat, endLng) => {\n  if (startLat === endLat || startLng === endLng) {\n    return 0;\n  }\n  if (startLat === void 0 || startLng === void 0 || endLat === void 0 || endLng === void 0) {\n    return 0;\n  }\n  const startLatRad = startLat * Math.PI / 180;\n  const startLngRad = startLng * Math.PI / 180;\n  const endLatRad = endLat * Math.PI / 180;\n  const endLngRad = endLng * Math.PI / 180;\n  const dLon = endLngRad - startLngRad;\n  const y = Math.sin(dLon) * Math.cos(endLatRad);\n  const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\n  const bearing = Math.atan2(y, x) * 180 / Math.PI;\n  return (bearing + 360) % 360;\n};\n\n// src/helpers/forms.ts\nvar handleInvalid = (e, requireError) => {\n  e.target.setCustomValidity(requireError || \"This filed is required !\");\n};\nvar handleChange = (e) => {\n  e.target.setCustomValidity(\"\");\n  const validation = e.target.getAttribute(\"data-validation\");\n  if (validation === \"text\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbers\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbersOnly\") {\n    const cleanedValue = e.target.value.replace(/[^0-9]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"price\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\.]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"textNumbers\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"email\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"color\") {\n    const cleanedValue = e.target.value.replace(/[^#0-9A-Fa-f]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"address\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"cars\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"charts\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else {\n    e.target.value = e.target.value;\n  }\n};\nvar handlePaste = (e) => {\n  const validation = e.currentTarget.getAttribute(\"data-validation\");\n  let pasteData = e.clipboardData.getData(\"text\");\n  if (validation === \"text\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n  } else if (validation === \"numbers\") {\n    pasteData = pasteData.replace(/[^0-9\\- +]/g, \"\");\n  } else if (validation === \"numbersOnly\") {\n    pasteData = pasteData.replace(/[^0-9]/g, \"\");\n  } else if (validation === \"price\") {\n    pasteData = pasteData.replace(/[^0-9\\.]/g, \"\");\n  } else if (validation === \"textNumbers\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n  } else if (validation === \"email\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n  } else if (validation === \"color\") {\n    pasteData = pasteData.replace(/[^#0-9A-Fa-f]/g, \"\");\n  } else if (validation === \"address\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n  } else if (validation === \"cars\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n  } else if (validation === \"charts\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n  }\n  e.preventDefault();\n  document.execCommand(\"insertText\", false, pasteData);\n};\nvar useValidation = (validationType, requireError) => {\n  return {\n    onChange: handleChange,\n    onPaste: handlePaste,\n    onInvalid: (e) => handleInvalid(e, requireError),\n    \"data-validation\": validationType\n  };\n};\n\n// src/helpers/store.ts\nvar setState = (updater, set, stateName) => {\n  return set((state) => ({\n    [stateName]: typeof updater === \"function\" ? updater(state[stateName]) : updater\n  }));\n};\nvar createSelectors = (store) => {\n  let selectors = {};\n  for (let k of Object.keys(store.getState())) {\n    selectors[k] = () => store((s) => s[k]);\n  }\n  return selectors;\n};\nvar useStoreValues = (store, keys) => {\n  const result = {};\n  keys.forEach((key) => {\n    result[key] = store.use[key]();\n  });\n  return result;\n};\n\n// src/helpers/phoneNumber.ts\nvar import_libphonenumber_js = require(\"libphonenumber-js\");\nvar isInternational = (phone_number) => {\n  return phone_number.startsWith(\"+\");\n};\nvar isInternationalIsraelPhone = (phone_number) => {\n  return phone_number.startsWith(\"+9725\");\n};\nvar local_israel_phone_format = (international_number) => {\n  return international_number.replace(\"+972\", \"0\");\n};\nvar international_israel_phone_format = (phone) => {\n  const validNumber = phone.slice(1, phone.length);\n  return \"+972\".concat(validNumber);\n};\nvar displayFormatPhoneNumber = (phoneNumber) => {\n  if (isInternational(phoneNumber)) {\n    const phoneNumberObject = (0, import_libphonenumber_js.parsePhoneNumberFromString)(phoneNumber);\n    if (!phoneNumberObject) {\n      return phoneNumber;\n    }\n    return phoneNumberObject.formatInternational().replace(/\\s/g, \"-\");\n  }\n  return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  add_document,\n  auth,\n  calculateBearing,\n  collections,\n  createSelectors,\n  db,\n  delete_document,\n  displayFormatPhoneNumber,\n  extractAlertsData,\n  extractBoardsData,\n  extractCanbusData,\n  extractCarsData,\n  extractClientData,\n  extractLocationData,\n  extractSiteData,\n  fire_base_TIME_TEMP,\n  formatCarNumber,\n  get_all_documents,\n  get_document_by_id,\n  handleChange,\n  handleInvalid,\n  handlePaste,\n  international_israel_phone_format,\n  isInternational,\n  isInternationalIsraelPhone,\n  local_israel_phone_format,\n  query_document,\n  query_document_by_conditions,\n  query_documents,\n  query_documents_by_conditions,\n  setState,\n  set_document,\n  simpleExtractData,\n  useStoreValues,\n  useValidation\n});\n"]}