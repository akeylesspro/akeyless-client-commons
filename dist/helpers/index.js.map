{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\helpers\\index.js"],"names":["__create","Object","create","__defProp","defineProperty","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__export","target","all","name","get","enumerable","__copyProps","to","from","except","desc","key","call","__getOwnPropDesc","__toESM","mod","isNodeMode","__toCommonJS","value","__esModule","helpers_exports","add_document","addressRegex","auth","calculateBearing","carsRegex","chartsRegex","cleanNxSites","collections","cn","colorRegex","createSelectors","db","delete_document","displayFormatPhoneNumber","extractAlertsData","extractBoardsData","extractCanbusData","emailRegex","extractLocationData","extractCarsData","extractClientData","extractSiteData","fire_base_TIME_TEMP","formatCarNumber","getUserCountryByIp","get_all_documents","get_document_by_id","handleChange","handleInvalid","handlePaste","initializeUserPermissions","international_israel_phone_format","isInternational","isInternationalIsraelPhone","is_iccid","local_israel_phone_format","numbersOnlyRegex","numbersRegex","query_documents","query_documents_by_conditions","parsePermissions","priceRegex","query_document","query_document_by_conditions","renderOnce","setState","set_document","simpleExtractData","snapshot","snapshotDocument","storage","textNumbersRegex","textRegex","useStoreValues","useValidation","import_moment","require","import_app","import_storage","import_auth","import_firestore","car_number","cn2","length","import_meta","initApp","isNodeEnv","firebaseConfig","process","env","apiKey","NEXT_PUBLIC_API_KEY","VITE_API_KEY","authDomain","NEXT_PUBLIC_AUTH_DOMAIN","VITE_AUTH_DOMAIN","projectId","NEXT_PUBLIC_PROJECT_ID","VITE_PROJECT_ID","storageBucket","NEXT_PUBLIC_STORAGE_BUCKET","VITE_STORAGE_BUCKET","messagingSenderId","appId","NEXT_PUBLIC_APP_ID","NEXT_PUBLIC_MESSAGING_SENDER_ID","VITE_APP_ID","VITE_MESSAGING_SENDER_ID","app","initializeApp","db2","getFirestore","storage2","getStorage","auth2","error","console","clients","collection","sites","cars","users","lastLocations","ermEvents","erm2Events","ruptelaEvents","polygons","polygonCars","canbus","states","app_pro_commands_queue","trips","tripsDetails","audit","nx_settings","settings","polygonEvents","nx_cars","boards","protection_types","charge_capacities","Timestamp","now","doc2","data","timestamp","timestamp_seconds","seconds","timestamp_ui","default","unix","format","docData","id","dateUpdated","Date","updated","nanoseconds","dateCreated","created","dateUploaded","uploaded","carData","icon","gov_info","vehicle_type","brand","manufacturer","carId","newDate","date_ui","locationData","latitude","longitude","spd","prev_latitude","prev_longitude","lat","prev_lat","getDocs","collection_path","prev_lng","Number","toFixed","snapshot2","documents","docs","map","doc_id","doc_ref","doc_snap","doc","getDoc","exists","Error","setDoc","merge","include_id","col_ref","addDoc"],"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/helpers/index.ts\nvar helpers_exports = {};\n__export(helpers_exports, {\n  add_document: () => add_document,\n  addressRegex: () => addressRegex,\n  auth: () => auth,\n  calculateBearing: () => calculateBearing,\n  carsRegex: () => carsRegex,\n  chartsRegex: () => chartsRegex,\n  cleanNxSites: () => cleanNxSites,\n  cn: () => cn,\n  collections: () => collections,\n  colorRegex: () => colorRegex,\n  createSelectors: () => createSelectors,\n  db: () => db,\n  delete_document: () => delete_document,\n  displayFormatPhoneNumber: () => displayFormatPhoneNumber,\n  emailRegex: () => emailRegex,\n  extractAlertsData: () => extractAlertsData,\n  extractBoardsData: () => extractBoardsData,\n  extractCanbusData: () => extractCanbusData,\n  extractCarsData: () => extractCarsData,\n  extractClientData: () => extractClientData,\n  extractLocationData: () => extractLocationData,\n  extractSiteData: () => extractSiteData,\n  fire_base_TIME_TEMP: () => fire_base_TIME_TEMP,\n  formatCarNumber: () => formatCarNumber,\n  getUserCountryByIp: () => getUserCountryByIp,\n  get_all_documents: () => get_all_documents,\n  get_document_by_id: () => get_document_by_id,\n  handleChange: () => handleChange,\n  handleInvalid: () => handleInvalid,\n  handlePaste: () => handlePaste,\n  initializeUserPermissions: () => initializeUserPermissions,\n  international_israel_phone_format: () => international_israel_phone_format,\n  isInternational: () => isInternational,\n  isInternationalIsraelPhone: () => isInternationalIsraelPhone,\n  is_iccid: () => is_iccid,\n  local_israel_phone_format: () => local_israel_phone_format,\n  numbersOnlyRegex: () => numbersOnlyRegex,\n  numbersRegex: () => numbersRegex,\n  parsePermissions: () => parsePermissions,\n  priceRegex: () => priceRegex,\n  query_document: () => query_document,\n  query_document_by_conditions: () => query_document_by_conditions,\n  query_documents: () => query_documents,\n  query_documents_by_conditions: () => query_documents_by_conditions,\n  renderOnce: () => renderOnce,\n  setState: () => setState,\n  set_document: () => set_document,\n  simpleExtractData: () => simpleExtractData,\n  snapshot: () => snapshot,\n  snapshotDocument: () => snapshotDocument,\n  storage: () => storage,\n  textNumbersRegex: () => textNumbersRegex,\n  textRegex: () => textRegex,\n  useStoreValues: () => useStoreValues,\n  useValidation: () => useValidation\n});\nmodule.exports = __toCommonJS(helpers_exports);\n\n// src/helpers/firebase.ts\nvar import_moment = __toESM(require(\"moment\"));\nvar import_app = require(\"firebase/app\");\nvar import_storage = require(\"firebase/storage\");\nvar import_auth = require(\"firebase/auth\");\nvar import_firestore = require(\"firebase/firestore\");\n\n// src/helpers/cars.ts\nvar formatCarNumber = (car_number) => {\n  var cn2 = car_number;\n  if (cn2?.length == 8) return `${cn2[0]}${cn2[1]}${cn2[2]}-${cn2[3]}${cn2[4]}-${cn2[5]}${cn2[6]}${cn2[7]}`;\n  if (cn2?.length == 7) return `${cn2[0]}${cn2[1]}-${cn2[2]}${cn2[3]}${cn2[4]}-${cn2[5]}${cn2[6]}`;\n  if (cn2?.length == 6) return `${cn2[0]}${cn2[1]}-${cn2[2]}${cn2[3]}-${cn2[4]}${cn2[5]}`;\n  if (cn2?.length == 5) return `${cn2[0]}-${cn2[1]}${cn2[2]}-${cn2[3]}${cn2[4]}`;\n  return cn2;\n};\n\n// src/helpers/firebase.ts\nvar import_meta = {};\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import_meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import_meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import_meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import_meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import_meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import_meta.env.VITE_APP_ID\n  };\n  try {\n    const app = (0, import_app.initializeApp)(firebaseConfig);\n    const auth2 = (0, import_auth.getAuth)(app);\n    const db2 = (0, import_firestore.getFirestore)(app);\n    const storage2 = (0, import_storage.getStorage)(app);\n    return { db: db2, auth: auth2, storage: storage2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth, storage } = initApp();\nvar collections = {\n  clients: (0, import_firestore.collection)(db, \"nx-clients\"),\n  sites: (0, import_firestore.collection)(db, \"nx-sites\"),\n  cars: (0, import_firestore.collection)(db, \"units\"),\n  users: (0, import_firestore.collection)(db, \"nx-users\"),\n  lastLocations: (0, import_firestore.collection)(db, \"last_locations\"),\n  ermEvents: (0, import_firestore.collection)(db, \"erm_events_general\"),\n  erm2Events: (0, import_firestore.collection)(db, \"erm2_events_general\"),\n  ruptelaEvents: (0, import_firestore.collection)(db, \"ruptela_events_general\"),\n  polygons: (0, import_firestore.collection)(db, \"nx-polygons\"),\n  polygonEvents: (0, import_firestore.collection)(db, \"polygon_events\"),\n  polygonCars: (0, import_firestore.collection)(db, \"polygon_cars\"),\n  canbus: (0, import_firestore.collection)(db, \"erm_canbus_parameters\"),\n  states: (0, import_firestore.collection)(db, \"erm_states\"),\n  app_pro_commands_queue: (0, import_firestore.collection)(db, \"app_pro_commands_queue\"),\n  trips: (0, import_firestore.collection)(db, \"erm2_trip\"),\n  tripsDetails: (0, import_firestore.collection)(db, \"erm2_trip_details\"),\n  audit: (0, import_firestore.collection)(db, \"nx-audit\"),\n  nx_settings: (0, import_firestore.collection)(db, \"nx-settings\"),\n  settings: (0, import_firestore.collection)(db, \"settings\"),\n  translations: (0, import_firestore.collection)(db, \"nx-translations\"),\n  nx_cars: (0, import_firestore.collection)(db, \"nx-cars\"),\n  boards: (0, import_firestore.collection)(db, \"boards\"),\n  protection_types: (0, import_firestore.collection)(db, \"protectionTypes\"),\n  board_types: (0, import_firestore.collection)(db, \"boardTypes\"),\n  charge_capacities: (0, import_firestore.collection)(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = import_firestore.Timestamp.now;\nvar extractAlertsData = (doc2) => {\n  const data = doc2.data();\n  const { car_number, timestamp } = data;\n  return {\n    ...data,\n    timestamp_seconds: timestamp.seconds,\n    timestamp_ui: import_moment.default.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\n    car_number: formatCarNumber(car_number)\n  };\n};\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar extractSiteData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"DD.MM.YYYY - HH:mm\")\n  };\n};\nvar extractClientData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: (0, import_moment.default)(dateCreated).format(\"HH:mm  DD/MM/YY\"),\n    updated: (0, import_moment.default)(dateUpdated).format(\"HH:mm  DD/MM/YY\")\n  };\n};\nvar extractBoardsData = (doc2) => {\n  const data = doc2.data();\n  const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : import_moment.default.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\n  return {\n    ...data,\n    id: doc2.id,\n    uploaded: dateUploaded\n  };\n};\nvar extractCarsData = (doc2) => {\n  const carData = doc2.data();\n  let icon;\n  const gov_info = carData.gov_info;\n  if (gov_info) {\n    if (carData.icon) {\n      icon = carData.icon;\n    } else if (gov_info.vehicle_type === \"atv\") {\n      icon = \"truck\";\n    } else if (gov_info.vehicle_type === \"motorcycle\") {\n      icon = \"motorcycle\";\n    } else {\n      icon = \"car\";\n    }\n  } else {\n    icon = \"car\";\n  }\n  return {\n    ...carData,\n    id: doc2.id,\n    brand: carData.brand || carData.manufacturer,\n    car_number: carData.carId,\n    icon\n  };\n};\nvar extractCanbusData = (doc2) => {\n  const data = doc2.data();\n  const newDate = new Date(data.timestamp.seconds * 1e3);\n  return {\n    ...data,\n    date_ui: (0, import_moment.default)(newDate).format(\"DD/MM/YYYY - HH:mm\")\n  };\n};\nvar extractLocationData = (doc2) => {\n  const locationData = doc2.data();\n  const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\n  return {\n    ...locationData,\n    id: doc2.id,\n    lat: latitude,\n    lng: longitude,\n    prev_lat: prev_latitude,\n    prev_lng: prev_longitude,\n    timestamp: timestamp?.seconds,\n    spd: Number(spd).toFixed(0)\n  };\n};\nvar get_all_documents = async (collection_path) => {\n  try {\n    const snapshot2 = await (0, import_firestore.getDocs)((0, import_firestore.collection)(db, collection_path));\n    const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    return [];\n  }\n};\nvar get_document_by_id = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    const doc_snap = await (0, import_firestore.getDoc)(doc_ref);\n    if (!doc_snap.exists()) {\n      throw new Error(\"Document not found, document id: \" + doc_id);\n    }\n    return simpleExtractData(doc_snap);\n  } catch (error) {\n    console.error(\"Error from get_document_by_id\", error);\n    return null;\n  }\n};\nvar set_document = async (collection_path, doc_id, data) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.setDoc)(doc_ref, data, { merge: true });\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\n    return false;\n  }\n};\nvar add_document = async (collection_path, data, include_id = false) => {\n  try {\n    const col_ref = (0, import_firestore.collection)(db, collection_path);\n    const doc_ref = await (0, import_firestore.addDoc)(col_ref, data);\n    if (include_id) {\n      await (0, import_firestore.setDoc)(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document in collection: ${collection_path}`, error);\n    return false;\n  }\n};\nvar delete_document = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = (0, import_firestore.doc)(db, collection_path, doc_id);\n    await (0, import_firestore.deleteDoc)(doc_ref);\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\n    return false;\n  }\n};\nvar query_document = async (collection_path, field_name, operator, value, ignore_log = false) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (documents.length < 1) {\n      throw new Error(\n        `No data to return from: \ncollection: ${collection_path}, \nfield_name: ${field_name}, \noperator: ${operator}, \nvalue: ${value}`\n      );\n    }\n    return documents[0];\n  } catch (error) {\n    if (!ignore_log) {\n      console.error(\"Error querying document:\", error);\n    }\n    return null;\n  }\n};\nvar query_documents = async (collection_path, field_name, operator, value) => {\n  try {\n    const q = (0, import_firestore.query)((0, import_firestore.collection)(db, collection_path), (0, import_firestore.where)(field_name, operator, value));\n    const query_snapshot = await (0, import_firestore.getDocs)(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\n    return [];\n  }\n};\nvar query_documents_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return [];\n  }\n};\nvar query_document_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = (0, import_firestore.collection)(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = (0, import_firestore.query)(db_query, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await (0, import_firestore.getDocs)(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (!documents[0]) {\n      throw new Error(\"No data returned from DB\");\n    }\n    return documents[0];\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return null;\n  }\n};\nvar snapshot = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  let isResolved = false;\n  const promise = new Promise((resolve) => {\n    console.log(`==> ${config.collectionName} subscribed.`);\n    resolvePromise = () => {\n      if (!isResolved) {\n        isResolved = true;\n        resolve();\n      }\n    };\n  });\n  let collectionRef = (0, import_firestore.collection)(db, config.collectionName);\n  if (config.conditions) {\n    config.conditions.forEach((condition) => {\n      collectionRef = (0, import_firestore.query)(collectionRef, (0, import_firestore.where)(condition.field_name, condition.operator, condition.value));\n    });\n  }\n  const unsubscribe = (0, import_firestore.onSnapshot)(\n    collectionRef,\n    (snapshot2) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        const documents = snapshot2.docs.map((doc2) => simpleExtractData(doc2));\n        config.onFirstTime?.(documents, config);\n        config.extraParsers?.forEach((extraParser) => {\n          extraParser.onFirstTime?.(documents, config);\n        });\n        resolvePromise();\n      } else {\n        const addedDocs = [];\n        const modifiedDocs = [];\n        const removedDocs = [];\n        snapshot2.docChanges().forEach((change) => {\n          if (change.type === \"added\") {\n            addedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"modified\") {\n            modifiedDocs.push(simpleExtractData(change.doc));\n          } else if (change.type === \"removed\") {\n            removedDocs.push(simpleExtractData(change.doc));\n          }\n        });\n        addedDocs.length && config.onAdd?.(addedDocs, config);\n        modifiedDocs.length && config.onModify?.(modifiedDocs, config);\n        removedDocs.length && config.onRemove?.(removedDocs, config);\n        config.extraParsers?.forEach((extraParser) => {\n          addedDocs.length && extraParser.onAdd?.(addedDocs, config);\n          modifiedDocs.length && extraParser.onModify?.(modifiedDocs, config);\n          removedDocs.length && extraParser.onRemove?.(removedDocs, config);\n        });\n      }\n    },\n    (error) => {\n      console.error(`Error listening to collection: ${config.collectionName}`, error);\n      resolvePromise();\n    }\n  );\n  return { promise, unsubscribe };\n};\nvar snapshotDocument = (config, snapshotsFirstTime) => {\n  let resolvePromise;\n  let isResolved = false;\n  const promise = new Promise((resolve) => {\n    console.log(`==> Document in ${config.collectionName} subscribed.`);\n    resolvePromise = () => {\n      if (!isResolved) {\n        isResolved = true;\n        resolve();\n      }\n    };\n  });\n  const documentRef = (0, import_firestore.doc)(db, config.collectionName, config.documentId);\n  const unsubscribe = (0, import_firestore.onSnapshot)(\n    documentRef,\n    (docSnapshot) => {\n      if (!snapshotsFirstTime.includes(config.collectionName)) {\n        snapshotsFirstTime.push(config.collectionName);\n        if (docSnapshot.exists()) {\n          const document2 = simpleExtractData(docSnapshot);\n          if (checkConditions(document2, config.conditions)) {\n            config.onFirstTime?.([document2], config);\n            config.extraParsers?.forEach((extraParser) => {\n              extraParser.onFirstTime?.([document2], config);\n            });\n          } else {\n            console.warn(`Document in ${config.collectionName} does not meet conditions.`);\n          }\n        } else {\n          console.warn(`Document not found in ${config.collectionName}.`);\n        }\n        resolvePromise();\n      } else {\n        if (docSnapshot.exists()) {\n          const document2 = simpleExtractData(docSnapshot);\n          if (checkConditions(document2, config.conditions)) {\n            config.onModify?.([document2], config);\n            config.extraParsers?.forEach((extraParser) => {\n              extraParser.onModify?.([document2], config);\n            });\n          }\n        } else {\n          config.onRemove?.([], config);\n          config.extraParsers?.forEach((extraParser) => {\n            extraParser.onRemove?.([], config);\n          });\n        }\n      }\n    },\n    (error) => {\n      console.error(`Error listening to document in ${config.collectionName}:`, error);\n      resolvePromise();\n    }\n  );\n  return { promise, unsubscribe };\n};\nvar checkConditions = (document2, conditions) => {\n  if (!conditions || conditions.length === 0) return true;\n  return conditions.every((condition) => {\n    const fieldValue = document2[condition.field_name];\n    switch (condition.operator) {\n      case \"==\":\n        return fieldValue === condition.value;\n      case \"!=\":\n        return fieldValue !== condition.value;\n      case \"<\":\n        return fieldValue < condition.value;\n      case \"<=\":\n        return fieldValue <= condition.value;\n      case \">\":\n        return fieldValue > condition.value;\n      case \">=\":\n        return fieldValue >= condition.value;\n      case \"array-contains\":\n        return Array.isArray(fieldValue) && fieldValue.includes(condition.value);\n      default:\n        return false;\n    }\n  });\n};\nvar cleanNxSites = async () => {\n  const clients = (await get_all_documents(\"nx-clients\")).map((v) => v.id);\n  const sites = await get_all_documents(\"nx-sites\");\n  const allSitesToDelete = sites.filter((v) => !clients.includes(v.client));\n  console.log(\"allSitesToDelete\", allSitesToDelete);\n  allSitesToDelete.forEach(async (v) => {\n    await delete_document(\"nx-sites\", v.id);\n    console.log(`Site ${v.id} deleted.`);\n  });\n};\n\n// src/helpers/global.ts\nvar import_akeyless_types_commons = require(\"akeyless-types-commons\");\nvar import_axios = __toESM(require(\"axios\"));\n\n// src/helpers/phoneNumber.ts\nvar import_libphonenumber_js = require(\"libphonenumber-js\");\nvar isInternational = (phone_number) => {\n  return phone_number.startsWith(\"+\");\n};\nvar isInternationalIsraelPhone = (phone_number) => {\n  return phone_number.startsWith(\"+9725\");\n};\nvar local_israel_phone_format = (international_number) => {\n  return international_number.replace(\"+972\", \"0\");\n};\nvar international_israel_phone_format = (phone) => {\n  const validNumber = phone.slice(1, phone.length);\n  return \"+972\".concat(validNumber);\n};\nvar displayFormatPhoneNumber = (phoneNumber) => {\n  if (isInternational(phoneNumber)) {\n    const phoneNumberObject = (0, import_libphonenumber_js.parsePhoneNumberFromString)(phoneNumber);\n    if (!phoneNumberObject) {\n      return phoneNumber;\n    }\n    return phoneNumberObject.formatInternational().replace(/\\s/g, \"-\");\n  }\n  return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n};\nvar is_iccid = (number) => {\n  if (number.length < 19 || number.length > 22) return false;\n  if (!/^\\d+$/.test(number)) return false;\n  if (!number.startsWith(\"89\")) return false;\n  return true;\n};\n\n// src/helpers/global.ts\nvar calculateBearing = (startLat, startLng, endLat, endLng) => {\n  if (startLat === endLat || startLng === endLng) {\n    return 0;\n  }\n  if (startLat === void 0 || startLng === void 0 || endLat === void 0 || endLng === void 0) {\n    return 0;\n  }\n  const startLatRad = startLat * Math.PI / 180;\n  const startLngRad = startLng * Math.PI / 180;\n  const endLatRad = endLat * Math.PI / 180;\n  const endLngRad = endLng * Math.PI / 180;\n  const dLon = endLngRad - startLngRad;\n  const y = Math.sin(dLon) * Math.cos(endLatRad);\n  const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\n  const bearing = Math.atan2(y, x) * 180 / Math.PI;\n  return (bearing + 360) % 360;\n};\nvar renderOnce = () => {\n  return true;\n};\nvar getUserCountryByIp = async () => {\n  try {\n    const response = await import_axios.default.get(\"https://ipapi.co/json/\");\n    return (response.data.country_code || import_akeyless_types_commons.CountryOptions.IL).toLowerCase();\n  } catch (error) {\n    console.error(\"Error fetching Country:\", error);\n    return import_akeyless_types_commons.CountryOptions.IL;\n  }\n};\nvar parsePermissions = (object) => {\n  if (!object?.features) {\n    return {};\n  }\n  const features = object.features;\n  let result = {};\n  features.forEach((feature) => {\n    if (!feature.includes(\"__\")) {\n      return;\n    }\n    const [featureType, featureName] = feature.split(\"__\");\n    if (!featureType || !featureName) {\n      return;\n    }\n    if (!result[featureType]) {\n      result[featureType] = {};\n    }\n    result[featureType][featureName] = true;\n  });\n  return result;\n};\nvar initializeUserPermissions = async ({ phoneNumber, firstTimeArray, getUpdatePermissions }) => {\n  let unsubscribe = null;\n  let permissions = {};\n  try {\n    const { promise, unsubscribe: unsubscribeSnapshot } = snapshot(\n      {\n        collectionName: \"nx-users\",\n        conditions: [{ field_name: \"phone_number\", operator: \"in\", value: [phoneNumber, local_israel_phone_format(phoneNumber)] }],\n        onFirstTime: (docs) => {\n          if (!docs.length) {\n            throw new Error(\"User not found\");\n          }\n          permissions = parsePermissions(docs[0]);\n          getUpdatePermissions(parsePermissions(docs[0]));\n        },\n        onModify: (docs) => {\n          getUpdatePermissions(parsePermissions(docs[0]));\n        }\n      },\n      firstTimeArray\n    );\n    unsubscribe = unsubscribeSnapshot;\n    await promise;\n    return { unsubscribe, permissions };\n  } catch (error) {\n    if (unsubscribe) {\n      unsubscribe();\n    }\n    console.error(\"Error initializing user permissions:\", error.message);\n    throw error;\n  }\n};\n\n// src/helpers/forms.ts\nvar import_xregexp = __toESM(require(\"xregexp\"));\nvar textRegex = (0, import_xregexp.default)(\"[^\\\\p{L}\\\\s-]\", \"gu\");\nvar numbersRegex = (0, import_xregexp.default)(\"[^0-9\\\\s-+]\", \"g\");\nvar numbersOnlyRegex = (0, import_xregexp.default)(\"[^0-9]\", \"g\");\nvar priceRegex = (0, import_xregexp.default)(\"[^0-9.]\", \"g\");\nvar emailRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9.@\\\\s-]\", \"gu\");\nvar colorRegex = (0, import_xregexp.default)(\"[^#0-9A-Fa-f]\", \"g\");\nvar carsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9,_]\", \"gu\");\nvar textNumbersRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s+\\\\-]\", \"gu\");\nvar addressRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,\\\\-]\", \"gu\");\nvar chartsRegex = (0, import_xregexp.default)(\"[^\\\\p{L}0-9\\\\s.,_@!\\\\-]\", \"gu\");\nvar handleChange = (e) => {\n  e.target.setCustomValidity(\"\");\n  const validation = e.target.getAttribute(\"data-validation\");\n  if (validation === \"text\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, textRegex, \"\");\n  } else if (validation === \"numbers\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, numbersRegex, \"\");\n  } else if (validation === \"numbersOnly\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, numbersOnlyRegex, \"\");\n  } else if (validation === \"price\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, priceRegex, \"\");\n  } else if (validation === \"textNumbers\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, textNumbersRegex, \"\");\n  } else if (validation === \"email\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, emailRegex, \"\");\n  } else if (validation === \"color\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, colorRegex, \"\");\n  } else if (validation === \"address\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, addressRegex, \"\");\n  } else if (validation === \"cars\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, carsRegex, \"\");\n  } else if (validation === \"charts\") {\n    e.target.value = import_xregexp.default.replace(e.target.value, chartsRegex, \"\");\n  }\n};\nvar handlePaste = (e) => {\n  const validation = e.currentTarget.getAttribute(\"data-validation\");\n  let pasteData = e.clipboardData.getData(\"text\");\n  if (validation === \"text\") {\n    pasteData = import_xregexp.default.replace(pasteData, textRegex, \"\");\n  } else if (validation === \"numbers\") {\n    pasteData = import_xregexp.default.replace(pasteData, numbersRegex, \"\");\n  } else if (validation === \"numbersOnly\") {\n    pasteData = import_xregexp.default.replace(pasteData, numbersOnlyRegex, \"\");\n  } else if (validation === \"price\") {\n    pasteData = import_xregexp.default.replace(pasteData, priceRegex, \"\");\n  } else if (validation === \"textNumbers\") {\n    pasteData = import_xregexp.default.replace(pasteData, textNumbersRegex, \"\");\n  } else if (validation === \"email\") {\n    pasteData = import_xregexp.default.replace(pasteData, emailRegex, \"\");\n  } else if (validation === \"color\") {\n    pasteData = import_xregexp.default.replace(pasteData, colorRegex, \"\");\n  } else if (validation === \"address\") {\n    pasteData = import_xregexp.default.replace(pasteData, addressRegex, \"\");\n  } else if (validation === \"cars\") {\n    pasteData = import_xregexp.default.replace(pasteData, carsRegex, \"\");\n  } else if (validation === \"charts\") {\n    pasteData = import_xregexp.default.replace(pasteData, chartsRegex, \"\");\n  }\n  e.preventDefault();\n  document.execCommand(\"insertText\", false, pasteData);\n};\nvar handleInvalid = (e, requireError) => {\n  e.target.setCustomValidity(requireError || \"This filed is required !\");\n};\nvar useValidation = (validationType, requireError) => {\n  return {\n    onChange: handleChange,\n    onPaste: handlePaste,\n    onInvalid: (e) => handleInvalid(e, requireError),\n    \"data-validation\": validationType\n  };\n};\n\n// src/helpers/store.ts\nvar setState = (updater, set, stateName) => {\n  return set((state) => ({\n    [stateName]: typeof updater === \"function\" ? updater(state[stateName]) : updater\n  }));\n};\nvar createSelectors = (store) => {\n  let selectors = {};\n  for (let k of Object.keys(store.getState())) {\n    selectors[k] = () => store((s) => s[k]);\n  }\n  return selectors;\n};\nvar useStoreValues = (store, keys) => {\n  const result = {};\n  keys.forEach((key) => {\n    result[key] = store.use[key]();\n  });\n  return result;\n};\n\n// src/lib/utils.ts\nvar import_clsx = require(\"clsx\");\nvar import_tailwind_merge = require(\"tailwind-merge\");\nfunction cn(...inputs) {\n  return (0, import_tailwind_merge.twMerge)((0, import_clsx.clsx)(inputs));\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  add_document,\n  addressRegex,\n  auth,\n  calculateBearing,\n  carsRegex,\n  chartsRegex,\n  cleanNxSites,\n  cn,\n  collections,\n  colorRegex,\n  createSelectors,\n  db,\n  delete_document,\n  displayFormatPhoneNumber,\n  emailRegex,\n  extractAlertsData,\n  extractBoardsData,\n  extractCanbusData,\n  extractCarsData,\n  extractClientData,\n  extractLocationData,\n  extractSiteData,\n  fire_base_TIME_TEMP,\n  formatCarNumber,\n  getUserCountryByIp,\n  get_all_documents,\n  get_document_by_id,\n  handleChange,\n  handleInvalid,\n  handlePaste,\n  initializeUserPermissions,\n  international_israel_phone_format,\n  isInternational,\n  isInternationalIsraelPhone,\n  is_iccid,\n  local_israel_phone_format,\n  numbersOnlyRegex,\n  numbersRegex,\n  parsePermissions,\n  priceRegex,\n  query_document,\n  query_document_by_conditions,\n  query_documents,\n  query_documents_by_conditions,\n  renderOnce,\n  setState,\n  set_document,\n  simpleExtractData,\n  snapshot,\n  snapshotDocument,\n  storage,\n  textNumbersRegex,\n  textRegex,\n  useStoreValues,\n  useValidation\n});\n"]}