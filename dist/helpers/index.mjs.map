{"version":3,"sources":["c:\\work\\akeyless\\commons\\client_commons\\dist\\helpers\\index.mjs"],"names":["initializeApp","moment","getAuth","car_number","cn","length","initApp","isNodeEnv","process","env","apiKey","NEXT_PUBLIC_API_KEY","VITE_API_KEY","formatCarNumber","authDomain","NEXT_PUBLIC_AUTH_DOMAIN","storageBucket","NEXT_PUBLIC_STORAGE_BUCKET","VITE_STORAGE_BUCKET","messagingSenderId","NEXT_PUBLIC_MESSAGING_SENDER_ID","VITE_MESSAGING_SENDER_ID","appId","NEXT_PUBLIC_APP_ID","VITE_APP_ID","app","firebaseConfig","db2","getFirestore","VITE_AUTH_DOMAIN","auth","auth2","error","console","db","sites","lastLocations","collection","cars","users","ermEvents","erm2Events","polygons","collections","canbus","states","app_pro_commands_queue","charge_capacities","trips","tripsDetails","audit","nx_settings","translations","nx_cars","protection_types","board_types","fire_base_TIME_TEMP","Timestamp","now","extractAlertsData","doc2","data","polygonEvents","timestamp_seconds","timestamp","seconds","docData","simpleExtractData","id","created","dateUpdated","Date","updated","nanoseconds","dateCreated","format","extractClientData","extractSiteData","extractBoardsData","dateUploaded","uploaded","unix","carData","icon","gov_info","vehicle_type","carId","extractCanbusData","newDate","date_ui","extractLocationData","locationData","latitude","longitude","spd","prev_latitude","prev_longitude","lat","lng","prev_lat","prev_lng","Number","toFixed","get_all_documents","collection_path","snapshot","documents","getDocs","docs","map","get_document_by_id","doc_id","doc_ref","doc_snap","doc","Error","exists","set_document","setDoc","merge","add_document","include_id","col_ref"],"mappings":"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","sourcesContent":["// src/helpers/firebase.ts\nimport moment from \"moment\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  setDoc,\n  Timestamp,\n  where,\n  getFirestore\n} from \"firebase/firestore\";\n\n// src/helpers/cars.ts\nvar formatCarNumber = (car_number) => {\n  var cn = car_number;\n  if (cn?.length == 8) return `${cn[0]}${cn[1]}${cn[2]}-${cn[3]}${cn[4]}-${cn[5]}${cn[6]}${cn[7]}`;\n  if (cn?.length == 7) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}${cn[4]}-${cn[5]}${cn[6]}`;\n  if (cn?.length == 6) return `${cn[0]}${cn[1]}-${cn[2]}${cn[3]}-${cn[4]}${cn[5]}`;\n  if (cn?.length == 5) return `${cn[0]}-${cn[1]}${cn[2]}-${cn[3]}${cn[4]}`;\n  return cn;\n};\n\n// src/helpers/firebase.ts\nvar initApp = () => {\n  const isNodeEnv = typeof process !== \"undefined\" && process.env;\n  const firebaseConfig = {\n    apiKey: isNodeEnv ? process.env.NEXT_PUBLIC_API_KEY : import.meta.env.VITE_API_KEY,\n    authDomain: isNodeEnv ? process.env.NEXT_PUBLIC_AUTH_DOMAIN : import.meta.env.VITE_AUTH_DOMAIN,\n    projectId: isNodeEnv ? process.env.NEXT_PUBLIC_PROJECT_ID : import.meta.env.VITE_PROJECT_ID,\n    storageBucket: isNodeEnv ? process.env.NEXT_PUBLIC_STORAGE_BUCKET : import.meta.env.VITE_STORAGE_BUCKET,\n    messagingSenderId: isNodeEnv ? process.env.NEXT_PUBLIC_MESSAGING_SENDER_ID : import.meta.env.VITE_MESSAGING_SENDER_ID,\n    appId: isNodeEnv ? process.env.NEXT_PUBLIC_APP_ID : import.meta.env.VITE_APP_ID\n  };\n  try {\n    const app = initializeApp(firebaseConfig);\n    const auth2 = getAuth(app);\n    const db2 = getFirestore(app);\n    return { db: db2, auth: auth2 };\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase app:\", error);\n    return { db: null, auth: null };\n  }\n};\nvar { db, auth } = initApp();\nvar collections = {\n  clients: collection(db, \"nx-clients\"),\n  sites: collection(db, \"nx-sites\"),\n  cars: collection(db, \"units\"),\n  users: collection(db, \"nx-users\"),\n  lastLocations: collection(db, \"last_locations\"),\n  ermEvents: collection(db, \"erm_events_general\"),\n  erm2Events: collection(db, \"erm2_events_general\"),\n  ruptelaEvents: collection(db, \"ruptela_events_general\"),\n  polygons: collection(db, \"nx-polygons\"),\n  polygonEvents: collection(db, \"polygon_events\"),\n  polygonCars: collection(db, \"polygon_cars\"),\n  canbus: collection(db, \"erm_canbus_parameters\"),\n  states: collection(db, \"erm_states\"),\n  app_pro_commands_queue: collection(db, \"app_pro_commands_queue\"),\n  trips: collection(db, \"erm2_trip\"),\n  tripsDetails: collection(db, \"erm2_trip_details\"),\n  audit: collection(db, \"nx-audit\"),\n  nx_settings: collection(db, \"nx-settings\"),\n  settings: collection(db, \"settings\"),\n  translations: collection(db, \"nx-translations\"),\n  nx_cars: collection(db, \"nx-cars\"),\n  boards: collection(db, \"boards\"),\n  protection_types: collection(db, \"protectionTypes\"),\n  board_types: collection(db, \"boardTypes\"),\n  charge_capacities: collection(db, \"nx-charge-capacities\")\n};\nvar fire_base_TIME_TEMP = Timestamp.now;\nvar extractAlertsData = (doc2) => {\n  const data = doc2.data();\n  const { car_number, timestamp } = data;\n  return {\n    ...data,\n    timestamp_seconds: timestamp.seconds,\n    timestamp_ui: moment.unix(timestamp.seconds).format(\"DD/MM/YY HH:mm\"),\n    car_number: formatCarNumber(car_number)\n  };\n};\nvar simpleExtractData = (doc2) => {\n  const docData = doc2.data();\n  return {\n    ...docData,\n    id: doc2.id\n  };\n};\nvar extractSiteData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: moment(dateCreated).format(\"DD.MM.YYYY - HH:mm\"),\n    updated: moment(dateUpdated).format(\"DD.MM.YYYY - HH:mm\")\n  };\n};\nvar extractClientData = (doc2) => {\n  const data = doc2.data();\n  const dateUpdated = new Date(data.updated?.seconds * 1e3 + data.updated.nanoseconds / 1e6);\n  const dateCreated = new Date(data.created?.seconds * 1e3 + data.created.nanoseconds / 1e6);\n  return {\n    ...data,\n    id: doc2.id,\n    created: moment(dateCreated).format(\"HH:mm  DD/MM/YY\"),\n    updated: moment(dateUpdated).format(\"HH:mm  DD/MM/YY\")\n  };\n};\nvar extractBoardsData = (doc2) => {\n  const data = doc2.data();\n  const dateUploaded = typeof data.uploaded === \"string\" ? data.uploaded : moment.unix(data.uploaded?.seconds).format(\"DD/MM/YY HH:mm\");\n  return {\n    ...data,\n    id: doc2.id,\n    uploaded: dateUploaded\n  };\n};\nvar extractCarsData = (doc2) => {\n  const carData = doc2.data();\n  let icon;\n  const gov_info = carData.gov_info;\n  if (gov_info) {\n    if (carData.icon) {\n      icon = carData.icon;\n    } else if (gov_info.vehicle_type === \"atv\") {\n      icon = \"truck\";\n    } else if (gov_info.vehicle_type === \"motorcycle\") {\n      icon = \"motorcycle\";\n    } else {\n      icon = \"car\";\n    }\n  } else {\n    icon = \"car\";\n  }\n  return {\n    ...carData,\n    id: doc2.id,\n    brand: carData.brand || carData.manufacturer,\n    car_number: carData.carId,\n    icon\n  };\n};\nvar extractCanbusData = (doc2) => {\n  const data = doc2.data();\n  const newDate = new Date(data.timestamp.seconds * 1e3);\n  return {\n    ...data,\n    date_ui: moment(newDate).format(\"DD/MM/YYYY - HH:mm\")\n  };\n};\nvar extractLocationData = (doc2) => {\n  const locationData = doc2.data();\n  const { latitude, longitude, spd, timestamp, prev_latitude, prev_longitude } = locationData;\n  return {\n    ...locationData,\n    id: doc2.id,\n    lat: latitude,\n    lng: longitude,\n    prev_lat: prev_latitude,\n    prev_lng: prev_longitude,\n    timestamp: timestamp?.seconds,\n    spd: Number(spd).toFixed(0)\n  };\n};\nvar get_all_documents = async (collection_path) => {\n  try {\n    const snapshot = await getDocs(collection(db, collection_path));\n    const documents = snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    return [];\n  }\n};\nvar get_document_by_id = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = doc(db, collection_path, doc_id);\n    const doc_snap = await getDoc(doc_ref);\n    if (!doc_snap.exists()) {\n      throw new Error(\"Document not found, document id: \" + doc_id);\n    }\n    return simpleExtractData(doc_snap);\n  } catch (error) {\n    console.error(\"Error from get_document_by_id\", error);\n    return null;\n  }\n};\nvar set_document = async (collection_path, doc_id, data) => {\n  try {\n    const doc_ref = doc(db, collection_path, doc_id);\n    await setDoc(doc_ref, data, { merge: true });\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document by id: ${doc_id} in collection: ${collection_path}`, { error, data });\n    return false;\n  }\n};\nvar add_document = async (collection_path, data, include_id = false) => {\n  try {\n    const col_ref = collection(db, collection_path);\n    const doc_ref = await addDoc(col_ref, data);\n    if (include_id) {\n      await setDoc(doc_ref, { ...data, id: doc_ref.id }, { merge: true });\n    }\n    return true;\n  } catch (error) {\n    console.error(`Failed to create document in collection: ${collection_path}`, error);\n    return false;\n  }\n};\nvar delete_document = async (collection_path, doc_id) => {\n  try {\n    const doc_ref = doc(db, collection_path, doc_id);\n    await deleteDoc(doc_ref);\n    return true;\n  } catch (error) {\n    console.error(`Failed to delete document with id ${doc_id} from collection ${collection_path}`, error);\n    return false;\n  }\n};\nvar query_document = async (collection_path, field_name, operator, value, ignore_log = false) => {\n  try {\n    const q = query(collection(db, collection_path), where(field_name, operator, value));\n    const query_snapshot = await getDocs(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (documents.length < 1) {\n      throw new Error(\n        `No data to return from: \ncollection: ${collection_path}, \nfield_name: ${field_name}, \noperator: ${operator}, \nvalue: ${value}`\n      );\n    }\n    return documents[0];\n  } catch (error) {\n    if (!ignore_log) {\n      console.error(\"Error querying document:\", error);\n    }\n    return null;\n  }\n};\nvar query_documents = async (collection_path, field_name, operator, value) => {\n  try {\n    const q = query(collection(db, collection_path), where(field_name, operator, value));\n    const query_snapshot = await getDocs(q);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${field_name} - ${operator} - ${value} `, error);\n    return [];\n  }\n};\nvar query_documents_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = collection(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = query(db_query, where(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await getDocs(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    return documents;\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return [];\n  }\n};\nvar query_document_by_conditions = async (collection_path, where_conditions) => {\n  try {\n    let db_query = collection(db, collection_path);\n    where_conditions.forEach((condition) => {\n      db_query = query(db_query, where(condition.field_name, condition.operator, condition.value));\n    });\n    const query_snapshot = await getDocs(db_query);\n    const documents = query_snapshot.docs.map((doc2) => simpleExtractData(doc2));\n    if (!documents[0]) {\n      throw new Error(\"No data returned from DB\");\n    }\n    return documents[0];\n  } catch (error) {\n    console.error(`Error querying documents: ${collection_path} - ${JSON.stringify(where_conditions)} `, error);\n    return null;\n  }\n};\n\n// src/helpers/global.ts\nvar calculateBearing = (startLat, startLng, endLat, endLng) => {\n  if (startLat === endLat || startLng === endLng) {\n    return 0;\n  }\n  if (startLat === void 0 || startLng === void 0 || endLat === void 0 || endLng === void 0) {\n    return 0;\n  }\n  const startLatRad = startLat * Math.PI / 180;\n  const startLngRad = startLng * Math.PI / 180;\n  const endLatRad = endLat * Math.PI / 180;\n  const endLngRad = endLng * Math.PI / 180;\n  const dLon = endLngRad - startLngRad;\n  const y = Math.sin(dLon) * Math.cos(endLatRad);\n  const x = Math.cos(startLatRad) * Math.sin(endLatRad) - Math.sin(startLatRad) * Math.cos(endLatRad) * Math.cos(dLon);\n  const bearing = Math.atan2(y, x) * 180 / Math.PI;\n  return (bearing + 360) % 360;\n};\n\n// src/helpers/forms.ts\nvar handleInvalid = (e, requireError) => {\n  e.target.setCustomValidity(requireError || \"This filed is required !\");\n};\nvar handleChange = (e) => {\n  e.target.setCustomValidity(\"\");\n  const validation = e.target.getAttribute(\"data-validation\");\n  if (validation === \"text\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbers\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"numbersOnly\") {\n    const cleanedValue = e.target.value.replace(/[^0-9]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"price\") {\n    const cleanedValue = e.target.value.replace(/[^0-9\\.]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"textNumbers\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"email\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"color\") {\n    const cleanedValue = e.target.value.replace(/[^#0-9A-Fa-f]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"address\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"cars\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n    e.target.value = cleanedValue;\n  } else if (validation === \"charts\") {\n    const cleanedValue = e.target.value.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n    e.target.value = cleanedValue;\n  } else {\n    e.target.value = e.target.value;\n  }\n};\nvar handlePaste = (e) => {\n  const validation = e.currentTarget.getAttribute(\"data-validation\");\n  let pasteData = e.clipboardData.getData(\"text\");\n  if (validation === \"text\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת\\- ]/g, \"\");\n  } else if (validation === \"numbers\") {\n    pasteData = pasteData.replace(/[^0-9\\- +]/g, \"\");\n  } else if (validation === \"numbersOnly\") {\n    pasteData = pasteData.replace(/[^0-9]/g, \"\");\n  } else if (validation === \"price\") {\n    pasteData = pasteData.replace(/[^0-9\\.]/g, \"\");\n  } else if (validation === \"textNumbers\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\- +]/g, \"\");\n  } else if (validation === \"email\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9.@\\- ]/g, \"\");\n  } else if (validation === \"color\") {\n    pasteData = pasteData.replace(/[^#0-9A-Fa-f]/g, \"\");\n  } else if (validation === \"address\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-., ]/g, \"\");\n  } else if (validation === \"cars\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9,_]/g, \"\");\n  } else if (validation === \"charts\") {\n    pasteData = pasteData.replace(/[^a-zA-Zא-ת0-9\\-.,_@! ]/g, \"\");\n  }\n  e.preventDefault();\n  document.execCommand(\"insertText\", false, pasteData);\n};\nvar useValidation = (validationType, requireError) => {\n  return {\n    onChange: handleChange,\n    onPaste: handlePaste,\n    onInvalid: (e) => handleInvalid(e, requireError),\n    \"data-validation\": validationType\n  };\n};\n\n// src/helpers/store.ts\nvar setState = (updater, set, stateName) => {\n  return set((state) => ({\n    [stateName]: typeof updater === \"function\" ? updater(state[stateName]) : updater\n  }));\n};\nvar createSelectors = (store) => {\n  let selectors = {};\n  for (let k of Object.keys(store.getState())) {\n    selectors[k] = () => store((s) => s[k]);\n  }\n  return selectors;\n};\nvar useStoreValues = (store, keys) => {\n  const result = {};\n  keys.forEach((key) => {\n    result[key] = store.use[key]();\n  });\n  return result;\n};\n\n// src/helpers/phoneNumber.ts\nimport { parsePhoneNumberFromString } from \"libphonenumber-js\";\nvar isInternational = (phone_number) => {\n  return phone_number.startsWith(\"+\");\n};\nvar isInternationalIsraelPhone = (phone_number) => {\n  return phone_number.startsWith(\"+9725\");\n};\nvar local_israel_phone_format = (international_number) => {\n  return international_number.replace(\"+972\", \"0\");\n};\nvar international_israel_phone_format = (phone) => {\n  const validNumber = phone.slice(1, phone.length);\n  return \"+972\".concat(validNumber);\n};\nvar displayFormatPhoneNumber = (phoneNumber) => {\n  if (isInternational(phoneNumber)) {\n    const phoneNumberObject = parsePhoneNumberFromString(phoneNumber);\n    if (!phoneNumberObject) {\n      return phoneNumber;\n    }\n    return phoneNumberObject.formatInternational().replace(/\\s/g, \"-\");\n  }\n  return phoneNumber.replace(/(\\d{3})(\\d{3})(\\d{4})/, \"$1-$2-$3\");\n};\nexport {\n  add_document,\n  auth,\n  calculateBearing,\n  collections,\n  createSelectors,\n  db,\n  delete_document,\n  displayFormatPhoneNumber,\n  extractAlertsData,\n  extractBoardsData,\n  extractCanbusData,\n  extractCarsData,\n  extractClientData,\n  extractLocationData,\n  extractSiteData,\n  fire_base_TIME_TEMP,\n  formatCarNumber,\n  get_all_documents,\n  get_document_by_id,\n  handleChange,\n  handleInvalid,\n  handlePaste,\n  international_israel_phone_format,\n  isInternational,\n  isInternationalIsraelPhone,\n  local_israel_phone_format,\n  query_document,\n  query_document_by_conditions,\n  query_documents,\n  query_documents_by_conditions,\n  setState,\n  set_document,\n  simpleExtractData,\n  useStoreValues,\n  useValidation\n};\n"]}